[[opcode]]
call = "integer_arithmetic_mul_widening_3264_decode"
args = ["Rd", "Rn", "Ra", "o0", "Rm", "U", "op54", "sf"]
bits = "9b208000"
mask = "ffe08000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Ra" = [14, 10], "o0" = [15], "Rm" = [20, 16], "U" = [23], "op54" = [30, 29], "sf" = [31] }
see = 1026

[[opcode]]
call = "integer_arithmetic_addsub_shiftedreg_decode"
args = ["Rd", "Rn", "imm6", "Rm", "shift", "S", "op", "sf"]
bits = "4b000000"
mask = "7f200000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm6" = [15, 10], "Rm" = [20, 16], "shift" = [23, 22], "S" = [29], "op" = [30], "sf" = [31] }
see = 1027

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_pair_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "0e20a400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1028

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "3820101f"
mask = "ffa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1029

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_pair_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "2e20ac00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1030

[[opcode]]
call = "memory_pair_general_preidx_memory_pair_general_postidx__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "29c00000"
mask = "7fc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1031

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b8201000"
mask = "bf20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1032

[[opcode]]
call = "vector_logical_decode"
args = ["Rd", "h", "g", "f", "e", "d", "o2", "cmode", "c", "b", "a", "op", "Q"]
bits = "0f000400"
mask = "9ff80c00"
slice = { "Rd" = [4, 0], "h" = [5], "g" = [6], "f" = [7], "e" = [8], "d" = [9], "o2" = [11], "cmode" = [15, 12], "c" = [16], "b" = [17], "a" = [18], "op" = [29], "Q" = [30] }
see = 1033

[[opcode]]
call = "vector_fp16_movi_decode"
args = ["Rd", "h", "g", "f", "e", "d", "o2", "cmode", "c", "b", "a", "op", "Q"]
bits = "0f00fc00"
mask = "bff8fc00"
slice = { "Rd" = [4, 0], "h" = [5], "g" = [6], "f" = [7], "e" = [8], "d" = [9], "o2" = [11], "cmode" = [15, 12], "c" = [16], "b" = [17], "a" = [18], "op" = [29], "Q" = [30] }
see = 1034

[[opcode]]
call = "integer_tags_mcsettaganddatapair_decode"
args = ["Xt", "Xn", "Xt2", "simm7"]
bits = "69000000"
mask = "ffc00000"
slice = { "Xt" = [4, 0], "Xn" = [9, 5], "Xt2" = [14, 10], "simm7" = [21, 15] }
see = 1035

[[opcode]]
call = "integer_pac_autib_dp_1src_decode"
args = ["Rd", "Rn", "Z", "opcode2", "S", "sf"]
bits = "dac11400"
mask = "ffffdc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Z" = [13], "opcode2" = [20, 16], "S" = [29], "sf" = [31] }
see = 1036

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_int_simd_decode"
args = ["Rd", "Rn", "eq", "Rm", "size", "U", "Q"]
bits = "0e203400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "eq" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1037

[[opcode]]
call = "vector_arithmetic_binary_uniform_sub_fp16_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "a", "U", "Q"]
bits = "0ec01400"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29], "Q" = [30] }
see = 1038

[[opcode]]
call = "vector_arithmetic_binary_element_mul_fp16_sisd_decode"
args = ["Rd", "Rn", "H", "opcode", "Rm", "M", "L", "size", "U"]
bits = "7f009000"
mask = "ffc0f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "opcode" = [15, 12], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29] }
see = 1039

[[opcode]]
call = "vector_arithmetic_binary_uniform_logical_andorr_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "0e601c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1040

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_halving_truncating_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "2e200400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1041

[[opcode]]
call = "memory_ordered_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "48c00000"
mask = "ffe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1042

[[opcode]]
call = "vector_arithmetic_unary_cmp_int_bulk_sisd_decode"
args = ["Rd", "Rn", "op", "size", "U"]
bits = "7e208800"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "size" = [23, 22], "U" = [29] }
see = 1043

[[opcode]]
call = "system_hints_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d503221f"
mask = "ffffffff"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1044

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "78204000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1045

[[opcode]]
call = "system_barriers_decode"
args = ["Rt", "opc", "CRm", "CRn", "op1", "op0", "L"]
bits = "d50330df"
mask = "fffff0ff"
slice = { "Rt" = [4, 0], "opc" = [6, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1046

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp16_sisd_decode"
args = ["Rd", "Rn", "ac", "Rm", "E", "U"]
bits = "7ec02c00"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "E" = [23], "U" = [29] }
see = 1047

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "38207000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1048

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_saturating_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U"]
bits = "5e200c00"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1049

[[opcode]]
call = "memory_vector_single_postinc_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "Rm", "R", "L", "Q"]
bits = "0dc0e000"
mask = "bfe0f000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "Rm" = [20, 16], "R" = [21], "L" = [22], "Q" = [30] }
see = 1050

[[opcode]]
call = "float_convert_fix_decode"
args = ["Rd", "Rn", "scale", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e180000"
mask = "7f3f0000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "scale" = [15, 10], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1051

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_saturating_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U"]
bits = "7e200c00"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1052

[[opcode]]
call = "vector_arithmetic_unary_fp16_round_decode"
args = ["Rd", "Rn", "o1", "o2", "U", "Q"]
bits = "2e798800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1053

[[opcode]]
call = "float_arithmetic_addsub_decode"
args = ["Rd", "Rn", "op", "Rm", "typ", "S", "M"]
bits = "1e203800"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "Rm" = [20, 16], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1054

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "38205000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1055

[[opcode]]
call = "integer_arithmetic_addsub_carry_decode"
args = ["Rd", "Rn", "opcode2", "Rm", "S", "op", "sf"]
bits = "3a000000"
mask = "7fe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode2" = [15, 10], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1056

[[opcode]]
call = "memory_single_general_immediate_signed_preidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "b8800c00"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1057

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_wrapping_pair_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "0e20bc00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1058

[[opcode]]
call = "integer_tags_mcinserttagmask_decode"
args = ["Xd", "Xn", "Xm"]
bits = "9ac01400"
mask = "ffe0fc00"
slice = { "Xd" = [4, 0], "Xn" = [9, 5], "Xm" = [20, 16] }
see = 1059

[[opcode]]
call = "system_hints_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d503205f"
mask = "ffffffff"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1060

[[opcode]]
call = "memory_pair_general_offset_memory_pair_general_postidx__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "69400000"
mask = "ffc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1061

[[opcode]]
call = "memory_ordered_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "08c08000"
mask = "ffe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1062

[[opcode]]
call = "vector_reduce_fp16maxnm_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "o1", "U"]
bits = "5eb0c800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "o1" = [23], "U" = [29] }
see = 1063

[[opcode]]
call = "vector_transfer_integer_dup_decode"
args = ["Rd", "Rn", "imm4", "imm5", "op", "Q"]
bits = "0e000c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm4" = [14, 11], "imm5" = [20, 16], "op" = [29], "Q" = [30] }
see = 1064

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "3820601f"
mask = "ffa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1065

[[opcode]]
call = "integer_arithmetic_addsub_immediate_decode"
args = ["Rd", "Rn", "imm12", "shift", "S", "op", "sf"]
bits = "11000000"
mask = "7f000000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm12" = [21, 10], "shift" = [23, 22], "S" = [29], "op" = [30], "sf" = [31] }
see = 1066

[[opcode]]
call = "vector_arithmetic_binary_disparate_diff_decode"
args = ["Rd", "Rn", "op", "Rm", "size", "U", "Q"]
bits = "0e205000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1067

[[opcode]]
call = "vector_arithmetic_unary_diffneg_float_decode"
args = ["Rd", "Rn", "opcode", "sz", "U", "Q"]
bits = "2ea0f800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1068

[[opcode]]
call = "memory_vector_single_nowb_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "R", "L", "Q"]
bits = "0d60e000"
mask = "bffff000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "R" = [21], "L" = [22], "Q" = [30] }
see = 1069

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_bulk_sisd_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U"]
bits = "7ea1a800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29] }
see = 1070

[[opcode]]
call = "memory_pair_simdfp_offset_memory_pair_simdfp_postidx__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "2d000000"
mask = "3fc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1071

[[opcode]]
call = "vector_arithmetic_binary_element_mul_fp_sisd_decode"
args = ["Rd", "Rn", "H", "opcode", "Rm", "M", "L", "sz", "U"]
bits = "5f809000"
mask = "ff80f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "opcode" = [15, 12], "Rm" = [19, 16], "M" = [20], "L" = [21], "sz" = [22], "U" = [29] }
see = 1072

[[opcode]]
call = "memory_single_general_immediate_signed_postidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "38000400"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1073

[[opcode]]
call = "memory_exclusive_single_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "48008000"
mask = "ffe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1074

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b820501f"
mask = "bfa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1075

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "78200000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1076

[[opcode]]
call = "float_arithmetic_mul_addsub_decode"
args = ["Rd", "Rn", "Ra", "o0", "Rm", "o1", "typ", "S", "M"]
bits = "1f200000"
mask = "ff208000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Ra" = [14, 10], "o0" = [15], "Rm" = [20, 16], "o1" = [21], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1077

[[opcode]]
call = "vector_arithmetic_unary_diffneg_int_simd_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "0e20b800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1078

[[opcode]]
call = "integer_tags_mcaddtag_decode"
args = ["Xd", "Xn", "uimm4", "op3", "uimm6"]
bits = "91800000"
mask = "ffc00000"
slice = { "Xd" = [4, 0], "Xn" = [9, 5], "uimm4" = [13, 10], "op3" = [15, 14], "uimm6" = [21, 16] }
see = 1079

[[opcode]]
call = "integer_arithmetic_addsub_extendedreg_decode"
args = ["Rd", "Rn", "imm3", "option_name", "Rm", "opt", "S", "op", "sf"]
bits = "4b200000"
mask = "7fe00000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm3" = [12, 10], "option_name" = [15, 13], "Rm" = [20, 16], "opt" = [23, 22], "S" = [29], "op" = [30], "sf" = [31] }
see = 1080

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_int_sisd_decode"
args = ["Rd", "Rn", "eq", "Rm", "size", "U"]
bits = "5e203c00"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "eq" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1081

[[opcode]]
call = "vector_shift_conv_int_sisd_decode"
args = ["Rd", "Rn", "opcode", "immb", "immh", "U"]
bits = "7f00e400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1082

[[opcode]]
call = "memory_vector_multiple_postinc_memory_vector_multiple_nowb__decode"
args = ["Rt", "Rn", "size", "opcode", "Rm", "L", "Q"]
bits = "0cc00000"
mask = "bfe0f000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "opcode" = [15, 12], "Rm" = [20, 16], "L" = [22], "Q" = [30] }
see = 1083

[[opcode]]
call = "memory_atomicops_swp_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "78208000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1084

[[opcode]]
call = "vector_shift_right_sisd_decode"
args = ["Rd", "Rn", "o0", "o1", "immb", "immh", "U"]
bits = "5f001400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "o1" = [13], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1085

[[opcode]]
call = "integer_conditional_compare_immediate_decode"
args = ["nzcv", "o3", "Rn", "o2", "cond", "imm5", "S", "op", "sf"]
bits = "3a400800"
mask = "7fe00c10"
slice = { "nzcv" = [3, 0], "o3" = [4], "Rn" = [9, 5], "o2" = [10], "cond" = [15, 12], "imm5" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1086

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_bulk_sisd_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U"]
bits = "5e21b800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29] }
see = 1087

[[opcode]]
call = "memory_single_general_immediate_signed_postidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "b8800400"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1088

[[opcode]]
call = "memory_single_general_immediate_signed_offset_unpriv_memory_single_general_immediate_signed_offset_unpriv__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "78000800"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1089

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b820301f"
mask = "bfa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1090

[[opcode]]
call = "vector_reduce_fp16max_simd_decode"
args = ["Rd", "Rn", "opcode", "o1", "U", "Q"]
bits = "0eb0f800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1091

[[opcode]]
call = "integer_arithmetic_addsub_extendedreg_decode"
args = ["Rd", "Rn", "imm3", "option_name", "Rm", "opt", "S", "op", "sf"]
bits = "0b200000"
mask = "7fe00000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm3" = [12, 10], "option_name" = [15, 13], "Rm" = [20, 16], "opt" = [23, 22], "S" = [29], "op" = [30], "sf" = [31] }
see = 1092

[[opcode]]
call = "vector_logical_decode"
args = ["Rd", "h", "g", "f", "e", "d", "o2", "cmode", "c", "b", "a", "op", "Q"]
bits = "0f001400"
mask = "bff81c00"
slice = { "Rd" = [4, 0], "h" = [5], "g" = [6], "f" = [7], "e" = [8], "d" = [9], "o2" = [11], "cmode" = [15, 12], "c" = [16], "b" = [17], "a" = [18], "op" = [29], "Q" = [30] }
see = 1093

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_fp_2008_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "o1", "U", "Q"]
bits = "2ea0c400"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1094

[[opcode]]
call = "integer_arithmetic_mul_uniform_addsub_decode"
args = ["Rd", "Rn", "Ra", "o0", "Rm", "op31", "op54", "sf"]
bits = "1b008000"
mask = "7fe08000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Ra" = [14, 10], "o0" = [15], "Rm" = [20, 16], "op31" = [23, 21], "op54" = [30, 29], "sf" = [31] }
see = 1095

[[opcode]]
call = "memory_ordered_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "08800000"
mask = "ffe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1096

[[opcode]]
call = "vector_reduce_fp16add_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U"]
bits = "5e30d800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29] }
see = 1097

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp_sisd_decode"
args = ["Rd", "Rn", "ac", "Rm", "sz", "E", "U"]
bits = "7ea0e400"
mask = "ffa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "sz" = [22], "E" = [23], "U" = [29] }
see = 1098

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_bulk_simd_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U", "Q"]
bits = "0e21a800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1099

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_bulk_sisd_decode"
args = ["Rd", "Rn", "o1", "o2", "U"]
bits = "7ef9a800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29] }
see = 1100

[[opcode]]
call = "float_arithmetic_unary_decode"
args = ["Rd", "Rn", "opc", "typ", "S", "M"]
bits = "1e20c000"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opc" = [16, 15], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1101

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_high_sisd_decode"
args = ["Rd", "Rn", "H", "S", "Rm", "M", "L", "size", "U"]
bits = "7f00d000"
mask = "ff00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "S" = [13], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29] }
see = 1102

[[opcode]]
call = "vector_arithmetic_unary_add_pairwise_decode"
args = ["Rd", "Rn", "op", "size", "U", "Q"]
bits = "0e206800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [14], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1103

[[opcode]]
call = "float_arithmetic_unary_decode"
args = ["Rd", "Rn", "opc", "typ", "S", "M"]
bits = "1e21c000"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opc" = [16, 15], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1104

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_fp_complex_decode"
args = ["Rd", "Rn", "rot", "Rm", "size", "U", "Q"]
bits = "2e00c400"
mask = "bf20e400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "rot" = [12, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1105

[[opcode]]
call = "system_hints_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d503201f"
mask = "ffffffff"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1106

[[opcode]]
call = "vector_reduce_fp16maxnm_simd_decode"
args = ["Rd", "Rn", "opcode", "o1", "U", "Q"]
bits = "0e30c800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1107

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_tieaway_sisd_decode"
args = ["Rd", "Rn", "opcode", "size_1_", "U"]
bits = "5e79c800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size_1_" = [23], "U" = [29] }
see = 1108

[[opcode]]
call = "integer_tags_mcsettagpairpre_decode"
args = ["Rt", "Xn", "imm9"]
bits = "19200c00"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Xn" = [9, 5], "imm9" = [20, 12] }
see = 1109

[[opcode]]
call = "memory_exclusive_single_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "08000000"
mask = "ffe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1110

[[opcode]]
call = "vector_arithmetic_unary_cmp_int_bulk_simd_decode"
args = ["Rd", "Rn", "op", "size", "U", "Q"]
bits = "0e209800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1111

[[opcode]]
call = "integer_tags_mcsettagpairandzerodatapost_decode"
args = ["Rt", "Xn", "imm9"]
bits = "19a00400"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Xn" = [9, 5], "imm9" = [20, 12] }
see = 1112

[[opcode]]
call = "vector_arithmetic_unary_extract_sqxtun_sisd_decode"
args = ["Rd", "Rn", "opcode", "size", "U"]
bits = "7e212800"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29] }
see = 1113

[[opcode]]
call = "memory_single_general_immediate_signed_offset_normal_memory_single_general_immediate_signed_offset_normal__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "b8000000"
mask = "bfe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1114

[[opcode]]
call = "vector_reduce_intmax_decode"
args = ["Rd", "Rn", "op", "size", "U", "Q"]
bits = "0e30a800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1115

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_int_doubling_accum_simd_decode"
args = ["Rd", "Rn", "S", "Rm", "size", "U", "Q"]
bits = "2e008c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1116

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp16_sisd_decode"
args = ["Rd", "Rn", "ac", "Rm", "E", "U"]
bits = "5e402400"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "E" = [23], "U" = [29] }
see = 1117

[[opcode]]
call = "vector_crypto_sha3op_sha1hash_majority_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size"]
bits = "5e002000"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [14, 12], "Rm" = [20, 16], "size" = [23, 22] }
see = 1118

[[opcode]]
call = "float_arithmetic_addsub_decode"
args = ["Rd", "Rn", "op", "Rm", "typ", "S", "M"]
bits = "1e202800"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "Rm" = [20, 16], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1119

[[opcode]]
call = "vector_crypto_sha3op_sha256hash_decode"
args = ["Rd", "Rn", "P", "Rm", "size"]
bits = "5e004000"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "P" = [12], "Rm" = [20, 16], "size" = [23, 22] }
see = 1120

[[opcode]]
call = "vector_arithmetic_binary_uniform_sub_fp_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "U", "Q"]
bits = "0ea0d400"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1121

[[opcode]]
call = "vector_arithmetic_binary_disparate_mul_dmacc_sisd_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U"]
bits = "5e209000"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1122

[[opcode]]
call = "vector_reduce_fpmax_simd_decode"
args = ["Rd", "Rn", "opcode", "sz", "o1", "U", "Q"]
bits = "2eb0f800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1123

[[opcode]]
call = "vector_arithmetic_binary_uniform_sub_fp16_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "a", "U", "Q"]
bits = "2ec01400"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29], "Q" = [30] }
see = 1124

[[opcode]]
call = "memory_atomicops_cas_single_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "08a07c00"
mask = "ffa07c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1125

[[opcode]]
call = "system_monitors_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d503305f"
mask = "fffff0ff"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1126

[[opcode]]
call = "vector_shift_conv_int_sisd_decode"
args = ["Rd", "Rn", "opcode", "immb", "immh", "U"]
bits = "5f00e400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1127

[[opcode]]
call = "float_compare_cond_decode"
args = ["nzcv", "op", "Rn", "cond", "Rm", "typ", "S", "M"]
bits = "1e200400"
mask = "ff200c10"
slice = { "nzcv" = [3, 0], "op" = [4], "Rn" = [9, 5], "cond" = [15, 12], "Rm" = [20, 16], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1128

[[opcode]]
call = "integer_arithmetic_addsub_shiftedreg_decode"
args = ["Rd", "Rn", "imm6", "Rm", "shift", "S", "op", "sf"]
bits = "6b000000"
mask = "7f200000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm6" = [15, 10], "Rm" = [20, 16], "shift" = [23, 22], "S" = [29], "op" = [30], "sf" = [31] }
see = 1129

[[opcode]]
call = "vector_arithmetic_unary_special_recip_fp16_sisd_decode"
args = ["Rd", "Rn", "opcode", "size_1_", "U"]
bits = "5ef9d800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size_1_" = [23], "U" = [29] }
see = 1130

[[opcode]]
call = "system_register_system_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "o0", "L"]
bits = "d5100000"
mask = "fff00000"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "o0" = [19], "L" = [21] }
see = 1131

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_high_sisd_decode"
args = ["Rd", "Rn", "H", "S", "Rm", "M", "L", "size", "U"]
bits = "7f00f000"
mask = "ff00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "S" = [13], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29] }
see = 1132

[[opcode]]
call = "vector_arithmetic_binary_element_mul_fp_simd_decode"
args = ["Rd", "Rn", "H", "opcode", "Rm", "M", "L", "sz", "U", "Q"]
bits = "2f809000"
mask = "bf80f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "opcode" = [15, 12], "Rm" = [19, 16], "M" = [20], "L" = [21], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1133

[[opcode]]
call = "integer_conditional_compare_register_decode"
args = ["nzcv", "o3", "Rn", "o2", "cond", "Rm", "S", "op", "sf"]
bits = "7a400000"
mask = "7fe00c10"
slice = { "nzcv" = [3, 0], "o3" = [4], "Rn" = [9, 5], "o2" = [10], "cond" = [15, 12], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1134

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "78205000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1135

[[opcode]]
call = "integer_conditional_select_decode"
args = ["Rd", "Rn", "o2", "cond", "Rm", "S", "op", "sf"]
bits = "1a800400"
mask = "7fe00c00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o2" = [10], "cond" = [15, 12], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1136

[[opcode]]
call = "memory_literal_general_decode"
args = ["Rt", "imm19", "V", "opc"]
bits = "98000000"
mask = "ff000000"
slice = { "Rt" = [4, 0], "imm19" = [23, 5], "V" = [26], "opc" = [31, 30] }
see = 1137

[[opcode]]
call = "integer_arithmetic_addsub_carry_decode"
args = ["Rd", "Rn", "opcode2", "Rm", "S", "op", "sf"]
bits = "5a000000"
mask = "7fe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode2" = [15, 10], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1138

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp_simd_decode"
args = ["Rd", "Rn", "ac", "Rm", "sz", "E", "U", "Q"]
bits = "0e20e400"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "sz" = [22], "E" = [23], "U" = [29], "Q" = [30] }
see = 1139

[[opcode]]
call = "memory_single_simdfp_immediate_signed_offset_normal_memory_single_simdfp_immediate_signed_offset_normal__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "3c400000"
mask = "3f600c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1140

[[opcode]]
call = "vector_arithmetic_unary_extract_sat_simd_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "2e214800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1141

[[opcode]]
call = "system_barriers_decode"
args = ["Rt", "opc", "CRm", "CRn", "op1", "op0", "L"]
bits = "d50330bf"
mask = "fffff0ff"
slice = { "Rt" = [4, 0], "opc" = [6, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1142

[[opcode]]
call = "vector_crypto_aes_mix_decode"
args = ["Rd", "Rn", "D", "size"]
bits = "4e286800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "D" = [12], "size" = [23, 22] }
see = 1143

[[opcode]]
call = "integer_pac_autdb_dp_1src_decode"
args = ["Rd", "Rn", "Z", "opcode2", "S", "sf"]
bits = "dac11c00"
mask = "ffffdc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Z" = [13], "opcode2" = [20, 16], "S" = [29], "sf" = [31] }
see = 1144

[[opcode]]
call = "vector_arithmetic_unary_diffneg_int_simd_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "2e20b800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1145

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "78207000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1146

[[opcode]]
call = "memory_exclusive_pair_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "sz"]
bits = "88208000"
mask = "bfe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "sz" = [30] }
see = 1147

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_int_simd_decode"
args = ["Rd", "Rn", "eq", "Rm", "size", "U", "Q"]
bits = "2e203c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "eq" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1148

[[opcode]]
call = "vector_transfer_integer_move_unsigned_decode"
args = ["Rd", "Rn", "imm4_0_", "imm4_1_", "imm4_3_2_", "imm5", "op", "Q"]
bits = "0e003c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm4_0_" = [11], "imm4_1_" = [12], "imm4_3_2_" = [14, 13], "imm5" = [20, 16], "op" = [29], "Q" = [30] }
see = 1149

[[opcode]]
call = "vector_reduce_intmax_decode"
args = ["Rd", "Rn", "op", "size", "U", "Q"]
bits = "2e31a800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1150

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_bulk_simd_decode"
args = ["Rd", "Rn", "o1", "o2", "U", "Q"]
bits = "2ef9b800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1151

[[opcode]]
call = "vector_arithmetic_binary_uniform_shift_sisd_decode"
args = ["Rd", "Rn", "S", "R", "Rm", "size", "U"]
bits = "7e205c00"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "R" = [12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1152

[[opcode]]
call = "vector_arithmetic_unary_float_round_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U", "Q"]
bits = "2e219800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1153

[[opcode]]
call = "vector_shift_rightnarrow_uniform_simd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U", "Q"]
bits = "2f009c00"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1154

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_fp_fused_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "op", "U", "Q"]
bits = "0ea0cc00"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "op" = [23], "U" = [29], "Q" = [30] }
see = 1155

[[opcode]]
call = "vector_crypto_sha3op_sha256sched1_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size"]
bits = "5e006000"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [14, 12], "Rm" = [20, 16], "size" = [23, 22] }
see = 1156

[[opcode]]
call = "vector_arithmetic_binary_uniform_rsqrtsfp16_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "a", "U", "Q"]
bits = "0ec03c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29], "Q" = [30] }
see = 1157

[[opcode]]
call = "branch_unconditional_register_decode"
args = ["Rm", "Rn", "M", "A", "op2", "op", "Z"]
bits = "d61f0800"
mask = "fefff800"
slice = { "Rm" = [4, 0], "Rn" = [9, 5], "M" = [10], "A" = [11], "op2" = [20, 16], "op" = [22, 21], "Z" = [24] }
see = 1158

[[opcode]]
call = "memory_vector_multiple_postinc_memory_vector_multiple_nowb__decode"
args = ["Rt", "Rn", "size", "opcode", "Rm", "L", "Q"]
bits = "0c804000"
mask = "bfe0f000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "opcode" = [15, 12], "Rm" = [20, 16], "L" = [22], "Q" = [30] }
see = 1159

[[opcode]]
call = "system_register_cpsr_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d500401f"
mask = "fff8f01f"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1160

[[opcode]]
call = "vector_arithmetic_unary_float_xtn_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U"]
bits = "7e216800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29] }
see = 1161

[[opcode]]
call = "vector_arithmetic_unary_diffneg_sat_sisd_decode"
args = ["Rd", "Rn", "opcode", "size", "U"]
bits = "7e207800"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29] }
see = 1162

[[opcode]]
call = "integer_arithmetic_addsub_carry_decode"
args = ["Rd", "Rn", "opcode2", "Rm", "S", "op", "sf"]
bits = "7a000000"
mask = "7fe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode2" = [15, 10], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1163

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "7820601f"
mask = "ffa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1164

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_wrapping_single_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "0e208400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1165

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp_simd_decode"
args = ["Rd", "Rn", "ac", "Rm", "sz", "E", "U", "Q"]
bits = "2e20e400"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "sz" = [22], "E" = [23], "U" = [29], "Q" = [30] }
see = 1166

[[opcode]]
call = "vector_arithmetic_unary_cmp_float_bulk_sisd_decode"
args = ["Rd", "Rn", "op", "sz", "U"]
bits = "5ea0c800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "sz" = [22], "U" = [29] }
see = 1167

[[opcode]]
call = "vector_arithmetic_binary_disparate_addsub_narrow_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "2e206000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1168

[[opcode]]
call = "integer_insext_insert_movewide_decode"
args = ["Rd", "imm16", "hw", "opc", "sf"]
bits = "72800000"
mask = "7f800000"
slice = { "Rd" = [4, 0], "imm16" = [20, 5], "hw" = [22, 21], "opc" = [30, 29], "sf" = [31] }
see = 1169

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_fp16_sisd_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "size", "U"]
bits = "5f001000"
mask = "ffc0f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29] }
see = 1170

[[opcode]]
call = "memory_single_general_immediate_signed_offset_unpriv_memory_single_general_immediate_signed_offset_unpriv__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "38400800"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1171

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b820401f"
mask = "bfa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1172

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_fp_sisd_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "sz", "U"]
bits = "5f805000"
mask = "ff80f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "sz" = [22], "U" = [29] }
see = 1173

[[opcode]]
call = "vector_arithmetic_binary_disparate_addsub_narrow_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "0e206000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1174

[[opcode]]
call = "vector_arithmetic_binary_uniform_shift_simd_decode"
args = ["Rd", "Rn", "S", "R", "Rm", "size", "U", "Q"]
bits = "2e205400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "R" = [12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1175

[[opcode]]
call = "branch_conditional_compare_decode"
args = ["Rt", "imm19", "op", "sf"]
bits = "34000000"
mask = "7f000000"
slice = { "Rt" = [4, 0], "imm19" = [23, 5], "op" = [24], "sf" = [31] }
see = 1176

[[opcode]]
call = "integer_arithmetic_mul_widening_3264_decode"
args = ["Rd", "Rn", "Ra", "o0", "Rm", "U", "op54", "sf"]
bits = "9ba00000"
mask = "ffe08000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Ra" = [14, 10], "o0" = [15], "Rm" = [20, 16], "U" = [23], "op54" = [30, 29], "sf" = [31] }
see = 1177

[[opcode]]
call = "memory_single_general_register_memory_single_general_register__decode"
args = ["Rt", "Rn", "S", "option_name", "Rm", "opc", "V", "size"]
bits = "b8a00800"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "S" = [12], "option_name" = [15, 13], "Rm" = [20, 16], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1178

[[opcode]]
call = "memory_single_general_register_memory_single_general_register__decode"
args = ["Rt", "Rn", "S", "option_name", "Rm", "opc", "V", "size"]
bits = "b8600800"
mask = "bfe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "S" = [12], "option_name" = [15, 13], "Rm" = [20, 16], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1179

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_fp16_extended_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "a", "U"]
bits = "5e401c00"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29] }
see = 1180

[[opcode]]
call = "memory_single_simdfp_register_memory_single_simdfp_register__decode"
args = ["Rt", "Rn", "S", "option_name", "Rm", "opc", "V", "size"]
bits = "3c200800"
mask = "3f600c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "S" = [12], "option_name" = [15, 13], "Rm" = [20, 16], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1181

[[opcode]]
call = "memory_single_general_immediate_signed_offset_normal_memory_single_general_immediate_signed_offset_normal__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "b8400000"
mask = "bfe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1182

[[opcode]]
call = "memory_vector_single_nowb_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "R", "L", "Q"]
bits = "0d400000"
mask = "bfff2000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "R" = [21], "L" = [22], "Q" = [30] }
see = 1183

[[opcode]]
call = "vector_arithmetic_unary_add_saturating_sisd_decode"
args = ["Rd", "Rn", "opcode", "size", "U"]
bits = "5e203800"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29] }
see = 1184

[[opcode]]
call = "vector_arithmetic_binary_uniform_logical_bsleor_decode"
args = ["Rd", "Rn", "opcode", "Rm", "opc2", "U", "Q"]
bits = "2ee01c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "opc2" = [23, 22], "U" = [29], "Q" = [30] }
see = 1185

[[opcode]]
call = "vector_arithmetic_unary_diffneg_fp16_decode"
args = ["Rd", "Rn", "opcode", "a", "U", "Q"]
bits = "0ef8f800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "a" = [23], "U" = [29], "Q" = [30] }
see = 1186

[[opcode]]
call = "integer_arithmetic_addsub_immediate_decode"
args = ["Rd", "Rn", "imm12", "shift", "S", "op", "sf"]
bits = "71000000"
mask = "7f000000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm12" = [21, 10], "shift" = [23, 22], "S" = [29], "op" = [30], "sf" = [31] }
see = 1187

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_int_sisd_decode"
args = ["Rd", "Rn", "eq", "Rm", "size", "U"]
bits = "7e203400"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "eq" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1188

[[opcode]]
call = "memory_pair_general_postidx_memory_pair_general_postidx__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "28800000"
mask = "7fc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1189

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_bitwise_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U"]
bits = "5e208c00"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1190

[[opcode]]
call = "memory_single_general_immediate_signed_preidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "38800c00"
mask = "ffa00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1191

[[opcode]]
call = "vector_crypto_aes_round_decode"
args = ["Rd", "Rn", "D", "size"]
bits = "4e284800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "D" = [12], "size" = [23, 22] }
see = 1192

[[opcode]]
call = "vector_arithmetic_unary_cmp_fp16_bulk_sisd_decode"
args = ["Rd", "Rn", "op", "a", "U"]
bits = "5ef8c800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "a" = [23], "U" = [29] }
see = 1193

[[opcode]]
call = "vector_arithmetic_binary_uniform_recpsfp16_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "a", "U", "Q"]
bits = "0e403c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29], "Q" = [30] }
see = 1194

[[opcode]]
call = "vector_arithmetic_unary_special_frecpxfp16_decode"
args = ["Rd", "Rn", "opcode", "a", "U"]
bits = "5ef9f800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "a" = [23], "U" = [29] }
see = 1195

[[opcode]]
call = "vector_arithmetic_unary_rev_decode"
args = ["Rd", "Rn", "o0", "size", "U", "Q"]
bits = "0e201800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1196

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_fp16_product_decode"
args = ["Rd", "Rn", "opcode", "Rm", "a", "U", "Q"]
bits = "2e401c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29], "Q" = [30] }
see = 1197

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "7820101f"
mask = "ffa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1198

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_fp16_fused_decode"
args = ["Rd", "Rn", "opcode", "Rm", "a", "U", "Q"]
bits = "0ec00c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29], "Q" = [30] }
see = 1199

[[opcode]]
call = "vector_arithmetic_unary_cmp_int_lessthan_simd_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "0e20a800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1200

[[opcode]]
call = "vector_crypto_sha2op_sha1hash_decode"
args = ["Rd", "Rn", "opcode", "size"]
bits = "5e280800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22] }
see = 1201

[[opcode]]
call = "vector_arithmetic_unary_special_sqrtest_int_decode"
args = ["Rd", "Rn", "opcode", "sz", "U", "Q"]
bits = "2ea1c800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1202

[[opcode]]
call = "memory_vector_multiple_nowb_memory_vector_multiple_nowb__decode"
args = ["Rt", "Rn", "size", "opcode", "L", "Q"]
bits = "0c004000"
mask = "bffff000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "opcode" = [15, 12], "L" = [22], "Q" = [30] }
see = 1203

[[opcode]]
call = "integer_logical_immediate_decode"
args = ["Rd", "Rn", "imms", "immr", "N", "opc", "sf"]
bits = "32000000"
mask = "7f800000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imms" = [15, 10], "immr" = [21, 16], "N" = [22], "opc" = [30, 29], "sf" = [31] }
see = 1204

[[opcode]]
call = "vector_arithmetic_unary_rev_decode"
args = ["Rd", "Rn", "o0", "size", "U", "Q"]
bits = "2e200800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1205

[[opcode]]
call = "vector_transfer_vector_permute_unzip_decode"
args = ["Rd", "Rn", "op", "Rm", "size", "Q"]
bits = "0e001800"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [14], "Rm" = [20, 16], "size" = [23, 22], "Q" = [30] }
see = 1206

[[opcode]]
call = "vector_arithmetic_unary_cmp_fp16_bulk_simd_decode"
args = ["Rd", "Rn", "op", "a", "U", "Q"]
bits = "0ef8d800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "a" = [23], "U" = [29], "Q" = [30] }
see = 1207

[[opcode]]
call = "memory_pair_general_noalloc_memory_pair_general_noalloc__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "28000000"
mask = "7fc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1208

[[opcode]]
call = "vector_arithmetic_unary_float_round_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U", "Q"]
bits = "0e219800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1209

[[opcode]]
call = "memory_pair_simdfp_offset_memory_pair_simdfp_postidx__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "2d400000"
mask = "3fc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1210

[[opcode]]
call = "vector_shift_leftsat_sisd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U"]
bits = "7f006400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1211

[[opcode]]
call = "float_convert_fix_decode"
args = ["Rd", "Rn", "scale", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e020000"
mask = "7f3f0000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "scale" = [15, 10], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1212

[[opcode]]
call = "memory_vector_single_nowb_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "R", "L", "Q"]
bits = "0d200000"
mask = "bfff2000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "R" = [21], "L" = [22], "Q" = [30] }
see = 1213

[[opcode]]
call = "vector_transfer_vector_cpydup_simd_decode"
args = ["Rd", "Rn", "imm4", "imm5", "op", "Q"]
bits = "0e000400"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm4" = [14, 11], "imm5" = [20, 16], "op" = [29], "Q" = [30] }
see = 1214

[[opcode]]
call = "branch_unconditional_immediate_decode"
args = ["imm26", "op"]
bits = "14000000"
mask = "fc000000"
slice = { "imm26" = [25, 0], "op" = [31] }
see = 1215

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_fp_2008_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "o1", "U", "Q"]
bits = "0e20c400"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1216

[[opcode]]
call = "float_convert_fix_decode"
args = ["Rd", "Rn", "scale", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e190000"
mask = "7f3f0000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "scale" = [15, 10], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1217

[[opcode]]
call = "memory_ordered_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "08c00000"
mask = "ffe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1218

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_fp16_2008_decode"
args = ["Rd", "Rn", "Op3", "Rm", "a", "U", "Q"]
bits = "2e400400"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Op3" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29], "Q" = [30] }
see = 1219

[[opcode]]
call = "vector_shift_leftlong_decode"
args = ["Rd", "Rn", "opcode", "immb", "immh", "U", "Q"]
bits = "2f00a400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1220

[[opcode]]
call = "vector_arithmetic_unary_diffneg_sat_sisd_decode"
args = ["Rd", "Rn", "opcode", "size", "U"]
bits = "5e207800"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29] }
see = 1221

[[opcode]]
call = "vector_arithmetic_unary_cmp_fp16_bulk_simd_decode"
args = ["Rd", "Rn", "op", "a", "U", "Q"]
bits = "2ef8d800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "a" = [23], "U" = [29], "Q" = [30] }
see = 1222

[[opcode]]
call = "vector_arithmetic_unary_cmp_fp16_bulk_simd_decode"
args = ["Rd", "Rn", "op", "a", "U", "Q"]
bits = "2ef8c800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "a" = [23], "U" = [29], "Q" = [30] }
see = 1223

[[opcode]]
call = "memory_pair_simdfp_preidx_memory_pair_simdfp_postidx__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "2d800000"
mask = "3fc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1224

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_fp_extended_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "U", "Q"]
bits = "0e20dc00"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1225

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "3820401f"
mask = "ffa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1226

[[opcode]]
call = "system_hints_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d50320bf"
mask = "ffffffff"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1227

[[opcode]]
call = "vector_arithmetic_unary_add_saturating_simd_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "2e203800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1228

[[opcode]]
call = "integer_arithmetic_cnt_decode"
args = ["Rd", "Rn", "op", "opcode2", "S", "sf"]
bits = "5ac01400"
mask = "7ffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [10], "opcode2" = [20, 16], "S" = [29], "sf" = [31] }
see = 1229

[[opcode]]
call = "vector_crypto_sha3op_sha256hash_decode"
args = ["Rd", "Rn", "P", "Rm", "size"]
bits = "5e005000"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "P" = [12], "Rm" = [20, 16], "size" = [23, 22] }
see = 1230

[[opcode]]
call = "memory_single_general_immediate_signed_offset_normal_memory_single_general_immediate_signed_offset_normal__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "38800000"
mask = "ffa00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1231

[[opcode]]
call = "integer_arithmetic_mul_widening_3264_decode"
args = ["Rd", "Rn", "Ra", "o0", "Rm", "U", "op54", "sf"]
bits = "9b200000"
mask = "ffe08000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Ra" = [14, 10], "o0" = [15], "Rm" = [20, 16], "U" = [23], "op54" = [30, 29], "sf" = [31] }
see = 1232

[[opcode]]
call = "branch_conditional_test_decode"
args = ["Rt", "imm14", "b40", "op", "b5"]
bits = "37000000"
mask = "7f000000"
slice = { "Rt" = [4, 0], "imm14" = [18, 5], "b40" = [23, 19], "op" = [24], "b5" = [31] }
see = 1233

[[opcode]]
call = "vector_transfer_vector_permute_transpose_decode"
args = ["Rd", "Rn", "op", "Rm", "size", "Q"]
bits = "0e006800"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [14], "Rm" = [20, 16], "size" = [23, 22], "Q" = [30] }
see = 1234

[[opcode]]
call = "vector_arithmetic_binary_disparate_addsub_long_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "0e200000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1235

[[opcode]]
call = "memory_single_general_immediate_unsigned_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm12", "opc", "V", "size"]
bits = "79400000"
mask = "ffc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm12" = [21, 10], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1236

[[opcode]]
call = "vector_arithmetic_unary_cmp_float_bulk_simd_decode"
args = ["Rd", "Rn", "op", "sz", "U", "Q"]
bits = "2ea0c800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1237

[[opcode]]
call = "vector_shift_rightnarrow_nonuniform_sisd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U"]
bits = "7f008c00"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1238

[[opcode]]
call = "vector_arithmetic_unary_cmp_fp16_lessthan_simd_decode"
args = ["Rd", "Rn", "opcode", "a", "U", "Q"]
bits = "0ef8e800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "a" = [23], "U" = [29], "Q" = [30] }
see = 1239

[[opcode]]
call = "memory_exclusive_pair_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "sz"]
bits = "88600000"
mask = "bfe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "sz" = [30] }
see = 1240

[[opcode]]
call = "memory_single_general_immediate_signed_offset_unpriv_memory_single_general_immediate_signed_offset_unpriv__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "b8800800"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1241

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_tieaway_simd_decode"
args = ["Rd", "Rn", "opcode", "a", "U", "Q"]
bits = "2e79c800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "a" = [23], "U" = [29], "Q" = [30] }
see = 1242

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_bitwise_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "2e208c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1243

[[opcode]]
call = "integer_logical_shiftedreg_decode"
args = ["Rd", "Rn", "imm6", "Rm", "N", "shift", "opc", "sf"]
bits = "0a200000"
mask = "7f200000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm6" = [15, 10], "Rm" = [20, 16], "N" = [21], "shift" = [23, 22], "opc" = [30, 29], "sf" = [31] }
see = 1244

[[opcode]]
call = "vector_transfer_vector_permute_zip_decode"
args = ["Rd", "Rn", "op", "Rm", "size", "Q"]
bits = "0e007800"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [14], "Rm" = [20, 16], "size" = [23, 22], "Q" = [30] }
see = 1245

[[opcode]]
call = "integer_crc_decode"
args = ["Rd", "Rn", "sz", "C", "opcode2_5_3_", "Rm", "S", "op", "sf"]
bits = "1ac04000"
mask = "7fe0f000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "sz" = [11, 10], "C" = [12], "opcode2_5_3_" = [15, 13], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1246

[[opcode]]
call = "vector_shift_conv_float_sisd_decode"
args = ["Rd", "Rn", "opcode", "immb", "immh", "U"]
bits = "7f00fc00"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1247

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_fp16_1985_decode"
args = ["Rd", "Rn", "opcode", "Rm", "o1", "U", "Q"]
bits = "2ec03400"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1248

[[opcode]]
call = "vector_shift_leftsat_simd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U", "Q"]
bits = "2f007400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1249

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_tieaway_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U"]
bits = "7e21c800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29] }
see = 1250

[[opcode]]
call = "memory_literal_general_decode"
args = ["Rt", "imm19", "V", "opc"]
bits = "18000000"
mask = "bf000000"
slice = { "Rt" = [4, 0], "imm19" = [23, 5], "V" = [26], "opc" = [31, 30] }
see = 1251

[[opcode]]
call = "memory_vector_single_nowb_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "R", "L", "Q"]
bits = "0d40e000"
mask = "bffff000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "R" = [21], "L" = [22], "Q" = [30] }
see = 1252

[[opcode]]
call = "memory_exclusive_pair_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "sz"]
bits = "88200000"
mask = "bfe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "sz" = [30] }
see = 1253

[[opcode]]
call = "memory_single_general_immediate_signed_postidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "78800400"
mask = "ffa00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1254

[[opcode]]
call = "vector_shift_left_simd_decode"
args = ["Rd", "Rn", "opcode", "immb", "immh", "U", "Q"]
bits = "0f005400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1255

[[opcode]]
call = "integer_arithmetic_addsub_immediate_decode"
args = ["Rd", "Rn", "imm12", "shift", "S", "op", "sf"]
bits = "31000000"
mask = "7f000000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm12" = [21, 10], "shift" = [23, 22], "S" = [29], "op" = [30], "sf" = [31] }
see = 1256

[[opcode]]
call = "vector_arithmetic_binary_uniform_shift_sisd_decode"
args = ["Rd", "Rn", "S", "R", "Rm", "size", "U"]
bits = "5e204400"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "R" = [12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1257

[[opcode]]
call = "memory_exclusive_single_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "08400000"
mask = "ffe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1258

[[opcode]]
call = "vector_arithmetic_unary_special_recip_float_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U"]
bits = "5ea1d800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29] }
see = 1259

[[opcode]]
call = "vector_arithmetic_binary_uniform_shift_sisd_decode"
args = ["Rd", "Rn", "S", "R", "Rm", "size", "U"]
bits = "5e205c00"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "R" = [12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1260

[[opcode]]
call = "float_arithmetic_maxmin_decode"
args = ["Rd", "Rn", "op", "Rm", "typ", "S", "M"]
bits = "1e204800"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [13, 12], "Rm" = [20, 16], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1261

[[opcode]]
call = "vector_arithmetic_binary_uniform_sub_int_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "2e202400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1262

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_bulk_simd_decode"
args = ["Rd", "Rn", "o1", "o2", "U", "Q"]
bits = "0e79b800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1263

[[opcode]]
call = "float_convert_int_decode"
args = ["Rd", "Rn", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e290000"
mask = "7f3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1264

[[opcode]]
call = "memory_single_general_immediate_signed_preidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "b8400c00"
mask = "bfe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1265

[[opcode]]
call = "vector_arithmetic_unary_fp16_round_decode"
args = ["Rd", "Rn", "o1", "o2", "U", "Q"]
bits = "0ef98800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1266

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b8200000"
mask = "bf20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1267

[[opcode]]
call = "system_barriers_decode"
args = ["Rt", "opc", "CRm", "CRn", "op1", "op0", "L"]
bits = "d503309f"
mask = "fffff0ff"
slice = { "Rt" = [4, 0], "opc" = [6, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1268

[[opcode]]
call = "vector_arithmetic_binary_disparate_mul_accum_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "0e20a000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1269

[[opcode]]
call = "vector_arithmetic_unary_extract_nosat_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "0e212800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1270

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_wrapping_single_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "2e208400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1271

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_fp16_decode"
args = ["Rd", "Rn", "opcode", "Rm", "a", "U", "Q"]
bits = "0e401400"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29], "Q" = [30] }
see = 1272

[[opcode]]
call = "memory_vector_multiple_postinc_memory_vector_multiple_nowb__decode"
args = ["Rt", "Rn", "size", "opcode", "Rm", "L", "Q"]
bits = "0cc02000"
mask = "bfe02000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "opcode" = [15, 12], "Rm" = [20, 16], "L" = [22], "Q" = [30] }
see = 1273

[[opcode]]
call = "vector_shift_right_simd_decode"
args = ["Rd", "Rn", "o0", "o1", "immb", "immh", "U", "Q"]
bits = "0f003400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "o1" = [13], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1274

[[opcode]]
call = "vector_shift_rightinsert_simd_decode"
args = ["Rd", "Rn", "opcode", "immb", "immh", "U", "Q"]
bits = "2f004400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1275

[[opcode]]
call = "integer_pac_autda_dp_1src_decode"
args = ["Rd", "Rn", "Z", "opcode2", "S", "sf"]
bits = "dac11800"
mask = "ffffdc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Z" = [13], "opcode2" = [20, 16], "S" = [29], "sf" = [31] }
see = 1276

[[opcode]]
call = "memory_single_general_immediate_unsigned_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm12", "opc", "V", "size"]
bits = "b9000000"
mask = "bfc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm12" = [21, 10], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1277

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_bulk_simd_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U", "Q"]
bits = "0ea1a800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1278

[[opcode]]
call = "memory_vector_single_postinc_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "Rm", "R", "L", "Q"]
bits = "0da02000"
mask = "bfe02000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "Rm" = [20, 16], "R" = [21], "L" = [22], "Q" = [30] }
see = 1279

[[opcode]]
call = "vector_shift_right_simd_decode"
args = ["Rd", "Rn", "o0", "o1", "immb", "immh", "U", "Q"]
bits = "2f001400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "o1" = [13], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1280

[[opcode]]
call = "vector_shift_right_sisd_decode"
args = ["Rd", "Rn", "o0", "o1", "immb", "immh", "U"]
bits = "5f002400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "o1" = [13], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1281

[[opcode]]
call = "integer_logical_shiftedreg_decode"
args = ["Rd", "Rn", "imm6", "Rm", "N", "shift", "opc", "sf"]
bits = "6a200000"
mask = "7f200000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm6" = [15, 10], "Rm" = [20, 16], "N" = [21], "shift" = [23, 22], "opc" = [30, 29], "sf" = [31] }
see = 1282

[[opcode]]
call = "memory_single_general_immediate_signed_offset_lda_stl_memory_single_general_immediate_signed_offset_lda_stl__decode"
args = ["Rt", "Rn", "imm9", "opc", "size"]
bits = "99800000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "size" = [31, 30] }
see = 1283

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_fp_simd_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "sz", "U", "Q"]
bits = "0f801000"
mask = "bf80f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1284

[[opcode]]
call = "vector_arithmetic_unary_special_sqrtest_fp16_sisd_decode"
args = ["Rd", "Rn", "opcode", "a", "U"]
bits = "7ef9d800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "a" = [23], "U" = [29] }
see = 1285

[[opcode]]
call = "integer_logical_shiftedreg_decode"
args = ["Rd", "Rn", "imm6", "Rm", "N", "shift", "opc", "sf"]
bits = "2a200000"
mask = "7f200000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm6" = [15, 10], "Rm" = [20, 16], "N" = [21], "shift" = [23, 22], "opc" = [30, 29], "sf" = [31] }
see = 1286

[[opcode]]
call = "vector_arithmetic_binary_uniform_diff_decode"
args = ["Rd", "Rn", "ac", "Rm", "size", "U", "Q"]
bits = "0e207c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1287

[[opcode]]
call = "memory_orderedrcpc_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b8a0c000"
mask = "bfe0fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1288

[[opcode]]
call = "integer_tags_mcsettaganddatapairpre_decode"
args = ["Xt", "Xn", "Xt2", "simm7"]
bits = "69800000"
mask = "ffc00000"
slice = { "Xt" = [4, 0], "Xn" = [9, 5], "Xt2" = [14, 10], "simm7" = [21, 15] }
see = 1289

[[opcode]]
call = "memory_exclusive_single_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "08408000"
mask = "ffe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1290

[[opcode]]
call = "memory_single_general_immediate_signed_offset_normal_memory_single_general_immediate_signed_offset_normal__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "78400000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1291

[[opcode]]
call = "float_convert_int_decode"
args = ["Rd", "Rn", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e230000"
mask = "7f3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1292

[[opcode]]
call = "vector_arithmetic_unary_extract_sat_sisd_decode"
args = ["Rd", "Rn", "opcode", "size", "U"]
bits = "5e214800"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29] }
see = 1293

[[opcode]]
call = "vector_arithmetic_unary_cmp_float_bulk_sisd_decode"
args = ["Rd", "Rn", "op", "sz", "U"]
bits = "7ea0d800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "sz" = [22], "U" = [29] }
see = 1294

[[opcode]]
call = "vector_arithmetic_binary_uniform_diff_decode"
args = ["Rd", "Rn", "ac", "Rm", "size", "U", "Q"]
bits = "2e207400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1295

[[opcode]]
call = "vector_arithmetic_binary_disparate_diff_decode"
args = ["Rd", "Rn", "op", "Rm", "size", "U", "Q"]
bits = "0e207000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1296

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp_simd_decode"
args = ["Rd", "Rn", "ac", "Rm", "sz", "E", "U", "Q"]
bits = "2e20ec00"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "sz" = [22], "E" = [23], "U" = [29], "Q" = [30] }
see = 1297

[[opcode]]
call = "vector_arithmetic_binary_uniform_divfp16_decode"
args = ["Rd", "Rn", "opcode", "Rm", "a", "U", "Q"]
bits = "2e403c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29], "Q" = [30] }
see = 1298

[[opcode]]
call = "integer_tags_mcsettagandzerodatapre_decode"
args = ["Rt", "Xn", "imm9"]
bits = "19800c00"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Xn" = [9, 5], "imm9" = [20, 12] }
see = 1299

[[opcode]]
call = "vector_shift_rightnarrow_nonuniform_sisd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U"]
bits = "7f008400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1300

[[opcode]]
call = "vector_shift_right_sisd_decode"
args = ["Rd", "Rn", "o0", "o1", "immb", "immh", "U"]
bits = "7f000400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "o1" = [13], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1301

[[opcode]]
call = "float_arithmetic_mul_addsub_decode"
args = ["Rd", "Rn", "Ra", "o0", "Rm", "o1", "typ", "S", "M"]
bits = "1f008000"
mask = "ff208000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Ra" = [14, 10], "o0" = [15], "Rm" = [20, 16], "o1" = [21], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1302

[[opcode]]
call = "vector_arithmetic_unary_not_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "2e205800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1303

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_tieaway_simd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U", "Q"]
bits = "0e21c800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1304

[[opcode]]
call = "branch_unconditional_dret_decode"
args = ["op4", "Rt", "op3", "op2", "opc"]
bits = "d6bf03e0"
mask = "ffffffff"
slice = { "op4" = [4, 0], "Rt" = [9, 5], "op3" = [15, 10], "op2" = [20, 16], "opc" = [24, 21] }
see = 1305

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_fp_mul_norounding_lower_decode"
args = ["Rd", "Rn", "Rm", "sz", "S", "Q"]
bits = "0e20ec00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Rm" = [20, 16], "sz" = [22], "S" = [23], "Q" = [30] }
see = 1306

[[opcode]]
call = "integer_arithmetic_mul_uniform_addsub_decode"
args = ["Rd", "Rn", "Ra", "o0", "Rm", "op31", "op54", "sf"]
bits = "1b000000"
mask = "7fe08000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Ra" = [14, 10], "o0" = [15], "Rm" = [20, 16], "op31" = [23, 21], "op54" = [30, 29], "sf" = [31] }
see = 1307

[[opcode]]
call = "memory_single_general_immediate_signed_offset_lda_stl_memory_single_general_immediate_signed_offset_lda_stl__decode"
args = ["Rt", "Rn", "imm9", "opc", "size"]
bits = "19000000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "size" = [31, 30] }
see = 1308

[[opcode]]
call = "integer_tags_mcgettag_decode"
args = ["Xt", "Xn", "imm9"]
bits = "19400800"
mask = "ffe00c00"
slice = { "Xt" = [4, 0], "Xn" = [9, 5], "imm9" = [20, 12] }
see = 1309

[[opcode]]
call = "vector_arithmetic_unary_add_pairwise_decode"
args = ["Rd", "Rn", "op", "size", "U", "Q"]
bits = "2e206800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [14], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1310

[[opcode]]
call = "memory_vector_multiple_nowb_memory_vector_multiple_nowb__decode"
args = ["Rt", "Rn", "size", "opcode", "L", "Q"]
bits = "0c408000"
mask = "bffff000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "opcode" = [15, 12], "L" = [22], "Q" = [30] }
see = 1311

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_double_sisd_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "size", "U"]
bits = "5f007000"
mask = "ff00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29] }
see = 1312

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_fp_complex_decode"
args = ["Rd", "Rn", "rot", "Rm", "size", "U", "Q"]
bits = "2e00e400"
mask = "bf20ec00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "rot" = [12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1313

[[opcode]]
call = "vector_arithmetic_binary_disparate_diff_decode"
args = ["Rd", "Rn", "op", "Rm", "size", "U", "Q"]
bits = "2e205000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1314

[[opcode]]
call = "vector_arithmetic_unary_float_round_frint_32_64_decode"
args = ["Rd", "Rn", "op", "sz", "U", "Q"]
bits = "0e21e800"
mask = "9fbfec00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1315

[[opcode]]
call = "float_arithmetic_div_decode"
args = ["Rd", "Rn", "opcode", "Rm", "typ", "S", "M"]
bits = "1e201800"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 12], "Rm" = [20, 16], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1316

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp16_simd_decode"
args = ["Rd", "Rn", "ac", "Rm", "E", "U", "Q"]
bits = "2ec02400"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "E" = [23], "U" = [29], "Q" = [30] }
see = 1317

[[opcode]]
call = "vector_arithmetic_unary_cmp_int_bulk_sisd_decode"
args = ["Rd", "Rn", "op", "size", "U"]
bits = "7e209800"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "size" = [23, 22], "U" = [29] }
see = 1318

[[opcode]]
call = "memory_atomicops_cas_pair_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "sz"]
bits = "08207c00"
mask = "bfa07c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "sz" = [30] }
see = 1319

[[opcode]]
call = "vector_shift_rightnarrow_uniform_sisd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U"]
bits = "5f009c00"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1320

[[opcode]]
call = "vector_reduce_fp16max_simd_decode"
args = ["Rd", "Rn", "opcode", "o1", "U", "Q"]
bits = "0e30f800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1321

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_int_doubling_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U"]
bits = "7e20b400"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1322

[[opcode]]
call = "memory_ordered_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "08808000"
mask = "ffe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1323

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_int_doubling_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U"]
bits = "5e20b400"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1324

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_bulk_sisd_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U"]
bits = "5ea1b800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29] }
see = 1325

[[opcode]]
call = "integer_shift_variable_decode"
args = ["Rd", "Rn", "op2", "opcode2_5_2_", "Rm", "S", "op", "sf"]
bits = "1ac02000"
mask = "7fe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op2" = [11, 10], "opcode2_5_2_" = [15, 12], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1326

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "7820401f"
mask = "ffa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1327

[[opcode]]
call = "vector_shift_leftlong_decode"
args = ["Rd", "Rn", "opcode", "immb", "immh", "U", "Q"]
bits = "0f00a400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1328

[[opcode]]
call = "vector_arithmetic_unary_float_widen_decode"
args = ["Rd", "Rn", "opcode", "sz", "U", "Q"]
bits = "0e217800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1329

[[opcode]]
call = "memory_literal_simdfp_decode"
args = ["Rt", "imm19", "V", "opc"]
bits = "1c000000"
mask = "3f000000"
slice = { "Rt" = [4, 0], "imm19" = [23, 5], "V" = [26], "opc" = [31, 30] }
see = 1330

[[opcode]]
call = "vector_arithmetic_unary_diffneg_fp16_decode"
args = ["Rd", "Rn", "opcode", "a", "U", "Q"]
bits = "2ef8f800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "a" = [23], "U" = [29], "Q" = [30] }
see = 1331

[[opcode]]
call = "vector_arithmetic_unary_cmp_int_bulk_simd_decode"
args = ["Rd", "Rn", "op", "size", "U", "Q"]
bits = "2e208800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1332

[[opcode]]
call = "vector_arithmetic_binary_disparate_mul_double_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U"]
bits = "5e20d000"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1333

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "3820501f"
mask = "ffa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1334

[[opcode]]
call = "vector_reduce_fpmax_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "o1", "U"]
bits = "7e30f800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "o1" = [23], "U" = [29] }
see = 1335

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_fp16_decode"
args = ["Rd", "Rn", "opcode", "Rm", "a", "U", "Q"]
bits = "2e401400"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29], "Q" = [30] }
see = 1336

[[opcode]]
call = "float_arithmetic_round_frint_decode"
args = ["Rd", "Rn", "rmode", "typ", "S", "M"]
bits = "1e244000"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "rmode" = [17, 15], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1337

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b820701f"
mask = "bfa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1338

[[opcode]]
call = "vector_arithmetic_binary_disparate_mul_accum_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "2e208000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1339

[[opcode]]
call = "vector_arithmetic_binary_element_mul_long_decode"
args = ["Rd", "Rn", "H", "opcode", "Rm", "M", "L", "size", "U", "Q"]
bits = "2f00a000"
mask = "bf00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "opcode" = [15, 12], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1340

[[opcode]]
call = "float_convert_int_decode"
args = ["Rd", "Rn", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e310000"
mask = "7f3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1341

[[opcode]]
call = "vector_shift_conv_int_simd_decode"
args = ["Rd", "Rn", "opcode", "immb", "immh", "U", "Q"]
bits = "2f00e400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1342

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_bulk_simd_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U", "Q"]
bits = "2e21a800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1343

[[opcode]]
call = "memory_single_general_immediate_signed_offset_lda_stl_memory_single_general_immediate_signed_offset_lda_stl__decode"
args = ["Rt", "Rn", "imm9", "opc", "size"]
bits = "59c00000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "size" = [31, 30] }
see = 1344

[[opcode]]
call = "branch_unconditional_register_decode"
args = ["Rm", "Rn", "M", "A", "op2", "op", "Z"]
bits = "d63f0000"
mask = "fffffc1f"
slice = { "Rm" = [4, 0], "Rn" = [9, 5], "M" = [10], "A" = [11], "op2" = [20, 16], "op" = [22, 21], "Z" = [24] }
see = 1345

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_fp_mul_norounding_upper_decode"
args = ["Rd", "Rn", "Rm", "sz", "S", "Q"]
bits = "2e20cc00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Rm" = [20, 16], "sz" = [22], "S" = [23], "Q" = [30] }
see = 1346

[[opcode]]
call = "integer_arithmetic_addsub_carry_decode"
args = ["Rd", "Rn", "opcode2", "Rm", "S", "op", "sf"]
bits = "1a000000"
mask = "7fe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode2" = [15, 10], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1347

[[opcode]]
call = "integer_insext_extract_immediate_decode"
args = ["Rd", "Rn", "imms", "Rm", "o0", "N", "op21", "sf"]
bits = "13800000"
mask = "7fa00000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imms" = [15, 10], "Rm" = [20, 16], "o0" = [21], "N" = [22], "op21" = [30, 29], "sf" = [31] }
see = 1348

[[opcode]]
call = "memory_single_general_immediate_unsigned_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm12", "opc", "V", "size"]
bits = "39000000"
mask = "ffc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm12" = [21, 10], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1349

[[opcode]]
call = "vector_arithmetic_binary_uniform_shift_sisd_decode"
args = ["Rd", "Rn", "S", "R", "Rm", "size", "U"]
bits = "5e204c00"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "R" = [12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1350

[[opcode]]
call = "memory_pair_general_postidx_memory_pair_general_postidx__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "28c00000"
mask = "7fc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1351

[[opcode]]
call = "memory_single_general_register_memory_single_general_register__decode"
args = ["Rt", "Rn", "S", "option_name", "Rm", "opc", "V", "size"]
bits = "78200800"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "S" = [12], "option_name" = [15, 13], "Rm" = [20, 16], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1352

[[opcode]]
call = "system_exceptions_debug_exception_decode"
args = ["LL", "op2", "imm16", "opc"]
bits = "d4a00001"
mask = "ffe0001f"
slice = { "LL" = [1, 0], "op2" = [4, 2], "imm16" = [20, 5], "opc" = [23, 21] }
see = 1353

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_bulk_simd_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U", "Q"]
bits = "2ea1a800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1354

[[opcode]]
call = "vector_shift_leftinsert_sisd_decode"
args = ["Rd", "Rn", "opcode", "immb", "immh", "U"]
bits = "7f005400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1355

[[opcode]]
call = "integer_tags_mcsubtag_decode"
args = ["Xd", "Xn", "uimm4", "op3", "uimm6"]
bits = "d1800000"
mask = "ffc00000"
slice = { "Xd" = [4, 0], "Xn" = [9, 5], "uimm4" = [13, 10], "op3" = [15, 14], "uimm6" = [21, 16] }
see = 1356

[[opcode]]
call = "memory_pair_general_offset_memory_pair_general_postidx__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "29000000"
mask = "7fc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1357

[[opcode]]
call = "float_arithmetic_unary_decode"
args = ["Rd", "Rn", "opc", "typ", "S", "M"]
bits = "1e214000"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opc" = [16, 15], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1358

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp16_simd_decode"
args = ["Rd", "Rn", "ac", "Rm", "E", "U", "Q"]
bits = "2ec02c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "E" = [23], "U" = [29], "Q" = [30] }
see = 1359

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "7820201f"
mask = "ffa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1360

[[opcode]]
call = "vector_shift_rightnarrow_logical_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U", "Q"]
bits = "0f008c00"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1361

[[opcode]]
call = "vector_arithmetic_unary_fp16_round_decode"
args = ["Rd", "Rn", "o1", "o2", "U", "Q"]
bits = "0e798800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1362

[[opcode]]
call = "vector_arithmetic_binary_uniform_shift_sisd_decode"
args = ["Rd", "Rn", "S", "R", "Rm", "size", "U"]
bits = "7e204c00"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "R" = [12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1363

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_bulk_sisd_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U"]
bits = "7e21b800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29] }
see = 1364

[[opcode]]
call = "memory_pair_general_preidx_memory_pair_general_postidx__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "69c00000"
mask = "ffc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1365

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "38203000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1366

[[opcode]]
call = "integer_flags_xaflag_decode"
args = ["CRm"]
bits = "d500403f"
mask = "fffff0ff"
slice = { "CRm" = [11, 8] }
see = 1367

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_bulk_simd_decode"
args = ["Rd", "Rn", "o1", "o2", "U", "Q"]
bits = "2e79a800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1368

[[opcode]]
call = "vector_arithmetic_unary_float_round_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U", "Q"]
bits = "0ea18800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1369

[[opcode]]
call = "vector_arithmetic_binary_uniform_sub_saturating_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "2e202c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1370

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_double_sisd_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "size", "U"]
bits = "5f003000"
mask = "ff00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29] }
see = 1371

[[opcode]]
call = "memory_vector_single_postinc_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "Rm", "R", "L", "Q"]
bits = "0da00000"
mask = "bfe02000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "Rm" = [20, 16], "R" = [21], "L" = [22], "Q" = [30] }
see = 1372

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp16_sisd_decode"
args = ["Rd", "Rn", "ac", "Rm", "E", "U"]
bits = "7e402400"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "E" = [23], "U" = [29] }
see = 1373

[[opcode]]
call = "memory_single_general_immediate_signed_offset_lda_stl_memory_single_general_immediate_signed_offset_lda_stl__decode"
args = ["Rt", "Rn", "imm9", "opc", "size"]
bits = "99000000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "size" = [31, 30] }
see = 1374

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_halving_rounding_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "0e201400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1375

[[opcode]]
call = "memory_single_simdfp_immediate_unsigned_memory_single_simdfp_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm12", "opc", "V", "size"]
bits = "3d000000"
mask = "3f400000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm12" = [21, 10], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1376

[[opcode]]
call = "vector_transfer_vector_permute_zip_decode"
args = ["Rd", "Rn", "op", "Rm", "size", "Q"]
bits = "0e003800"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [14], "Rm" = [20, 16], "size" = [23, 22], "Q" = [30] }
see = 1377

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "3820701f"
mask = "ffa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1378

[[opcode]]
call = "vector_arithmetic_binary_uniform_sub_saturating_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "0e202c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1379

[[opcode]]
call = "vector_crypto_aes_round_decode"
args = ["Rd", "Rn", "D", "size"]
bits = "4e285800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "D" = [12], "size" = [23, 22] }
see = 1380

[[opcode]]
call = "vector_arithmetic_unary_float_conv_int_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U"]
bits = "5e21d800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29] }
see = 1381

[[opcode]]
call = "vector_arithmetic_binary_uniform_logical_andorr_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "0e201c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1382

[[opcode]]
call = "memory_single_general_immediate_signed_preidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "78000c00"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1383

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_fp16_1985_decode"
args = ["Rd", "Rn", "opcode", "Rm", "o1", "U", "Q"]
bits = "0ec03400"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1384

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_bulk_sisd_decode"
args = ["Rd", "Rn", "o1", "o2", "U"]
bits = "5e79a800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29] }
see = 1385

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_long_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "size", "U", "Q"]
bits = "0f002000"
mask = "bf00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1386

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp_simd_decode"
args = ["Rd", "Rn", "ac", "Rm", "sz", "E", "U", "Q"]
bits = "2ea0e400"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "sz" = [22], "E" = [23], "U" = [29], "Q" = [30] }
see = 1387

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_bulk_simd_decode"
args = ["Rd", "Rn", "o1", "o2", "U", "Q"]
bits = "2ef9a800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1388

[[opcode]]
call = "vector_arithmetic_binary_disparate_addsub_long_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "2e200000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1389

[[opcode]]
call = "integer_arithmetic_addsub_extendedreg_decode"
args = ["Rd", "Rn", "imm3", "option_name", "Rm", "opt", "S", "op", "sf"]
bits = "2b200000"
mask = "7fe00000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm3" = [12, 10], "option_name" = [15, 13], "Rm" = [20, 16], "opt" = [23, 22], "S" = [29], "op" = [30], "sf" = [31] }
see = 1390

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b8203000"
mask = "bf20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1391

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_bulk_sisd_decode"
args = ["Rd", "Rn", "o1", "o2", "U"]
bits = "7e79b800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29] }
see = 1392

[[opcode]]
call = "integer_arithmetic_addsub_immediate_decode"
args = ["Rd", "Rn", "imm12", "shift", "S", "op", "sf"]
bits = "51000000"
mask = "7f000000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm12" = [21, 10], "shift" = [23, 22], "S" = [29], "op" = [30], "sf" = [31] }
see = 1393

[[opcode]]
call = "integer_arithmetic_address_pcrel_decode"
args = ["Rd", "immhi", "immlo", "op"]
bits = "90000000"
mask = "9f000000"
slice = { "Rd" = [4, 0], "immhi" = [23, 5], "immlo" = [30, 29], "op" = [31] }
see = 1394

[[opcode]]
call = "float_arithmetic_round_frint_decode"
args = ["Rd", "Rn", "rmode", "typ", "S", "M"]
bits = "1e24c000"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "rmode" = [17, 15], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1395

[[opcode]]
call = "memory_vector_single_nowb_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "R", "L", "Q"]
bits = "0d60c000"
mask = "bffff000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "R" = [21], "L" = [22], "Q" = [30] }
see = 1396

[[opcode]]
call = "memory_single_general_immediate_signed_offset_lda_stl_memory_single_general_immediate_signed_offset_lda_stl__decode"
args = ["Rt", "Rn", "imm9", "opc", "size"]
bits = "99400000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "size" = [31, 30] }
see = 1397

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_tieaway_simd_decode"
args = ["Rd", "Rn", "opcode", "a", "U", "Q"]
bits = "0e79c800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "a" = [23], "U" = [29], "Q" = [30] }
see = 1398

[[opcode]]
call = "memory_exclusive_single_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "08008000"
mask = "ffe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1399

[[opcode]]
call = "memory_vector_multiple_nowb_memory_vector_multiple_nowb__decode"
args = ["Rt", "Rn", "size", "opcode", "L", "Q"]
bits = "0c000000"
mask = "bffff000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "opcode" = [15, 12], "L" = [22], "Q" = [30] }
see = 1400

[[opcode]]
call = "vector_arithmetic_binary_uniform_recps_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "U"]
bits = "5e20fc00"
mask = "ffa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "U" = [29] }
see = 1401

[[opcode]]
call = "vector_arithmetic_unary_cmp_float_bulk_simd_decode"
args = ["Rd", "Rn", "op", "sz", "U", "Q"]
bits = "0ea0d800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1402

[[opcode]]
call = "float_move_fp_imm_decode"
args = ["Rd", "imm5", "imm8", "typ", "S", "M"]
bits = "1e201000"
mask = "ff201fe0"
slice = { "Rd" = [4, 0], "imm5" = [9, 5], "imm8" = [20, 13], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1403

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_int_sisd_decode"
args = ["Rd", "Rn", "opcode", "a", "U"]
bits = "5e79d800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "a" = [23], "U" = [29] }
see = 1404

[[opcode]]
call = "memory_vector_multiple_postinc_memory_vector_multiple_nowb__decode"
args = ["Rt", "Rn", "size", "opcode", "Rm", "L", "Q"]
bits = "0c800000"
mask = "bfe0f000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "opcode" = [15, 12], "Rm" = [20, 16], "L" = [22], "Q" = [30] }
see = 1405

[[opcode]]
call = "vector_arithmetic_binary_disparate_addsub_wide_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "0e201000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1406

[[opcode]]
call = "memory_vector_single_postinc_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "Rm", "R", "L", "Q"]
bits = "0d802000"
mask = "bfe02000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "Rm" = [20, 16], "R" = [21], "L" = [22], "Q" = [30] }
see = 1407

[[opcode]]
call = "float_arithmetic_maxmin_decode"
args = ["Rd", "Rn", "op", "Rm", "typ", "S", "M"]
bits = "1e207800"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [13, 12], "Rm" = [20, 16], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1408

[[opcode]]
call = "vector_arithmetic_binary_element_mul_int_decode"
args = ["Rd", "Rn", "H", "opcode", "Rm", "M", "L", "size", "U", "Q"]
bits = "0f008000"
mask = "bf00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "opcode" = [15, 12], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1409

[[opcode]]
call = "vector_crypto_sha3_xar_decode"
args = ["Rd", "Rn", "imm6", "Rm"]
bits = "ce800000"
mask = "ffe00000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm6" = [15, 10], "Rm" = [20, 16] }
see = 1410

[[opcode]]
call = "vector_arithmetic_unary_add_pairwise_decode"
args = ["Rd", "Rn", "op", "size", "U", "Q"]
bits = "0e202800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [14], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1411

[[opcode]]
call = "vector_arithmetic_binary_disparate_addsub_long_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "0e202000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1412

[[opcode]]
call = "memory_single_general_immediate_unsigned_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm12", "opc", "V", "size"]
bits = "79800000"
mask = "ff800000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm12" = [21, 10], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1413

[[opcode]]
call = "vector_arithmetic_binary_uniform_sub_fp_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "U", "Q"]
bits = "2ea0d400"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1414

[[opcode]]
call = "integer_bitfield_decode"
args = ["Rd", "Rn", "imms", "immr", "N", "opc", "sf"]
bits = "13000000"
mask = "7f800000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imms" = [15, 10], "immr" = [21, 16], "N" = [22], "opc" = [30, 29], "sf" = [31] }
see = 1415

[[opcode]]
call = "vector_shift_right_simd_decode"
args = ["Rd", "Rn", "o0", "o1", "immb", "immh", "U", "Q"]
bits = "0f001400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "o1" = [13], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1416

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_high_simd_decode"
args = ["Rd", "Rn", "H", "S", "Rm", "M", "L", "size", "U", "Q"]
bits = "2f00d000"
mask = "bf00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "S" = [13], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1417

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_int_doubling_accum_simd_decode"
args = ["Rd", "Rn", "S", "Rm", "size", "U", "Q"]
bits = "2e008400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1418

[[opcode]]
call = "memory_single_general_immediate_signed_postidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "78400400"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1419

[[opcode]]
call = "vector_arithmetic_binary_uniform_div_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "U", "Q"]
bits = "2e20fc00"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1420

[[opcode]]
call = "memory_vector_single_nowb_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "R", "L", "Q"]
bits = "0d40c000"
mask = "bffff000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "R" = [21], "L" = [22], "Q" = [30] }
see = 1421

[[opcode]]
call = "vector_shift_rightnarrow_uniform_sisd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U"]
bits = "5f009400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1422

[[opcode]]
call = "vector_arithmetic_binary_element_mul_high_simd_decode"
args = ["Rd", "Rn", "H", "op", "Rm", "M", "L", "size", "U", "Q"]
bits = "0f00c000"
mask = "bf00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "op" = [12], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1423

[[opcode]]
call = "vector_arithmetic_binary_disparate_addsub_long_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "2e202000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1424

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp16_sisd_decode"
args = ["Rd", "Rn", "ac", "Rm", "E", "U"]
bits = "7e402c00"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "E" = [23], "U" = [29] }
see = 1425

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_fp16_fused_decode"
args = ["Rd", "Rn", "opcode", "Rm", "a", "U", "Q"]
bits = "0e400c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29], "Q" = [30] }
see = 1426

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "3820201f"
mask = "ffa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1427

[[opcode]]
call = "memory_vector_single_nowb_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "R", "L", "Q"]
bits = "0d600000"
mask = "bfff2000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "R" = [21], "L" = [22], "Q" = [30] }
see = 1428

[[opcode]]
call = "memory_single_general_immediate_signed_offset_unpriv_memory_single_general_immediate_signed_offset_unpriv__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "38000800"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1429

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_int_product_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "0e209c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1430

[[opcode]]
call = "vector_shift_right_simd_decode"
args = ["Rd", "Rn", "o0", "o1", "immb", "immh", "U", "Q"]
bits = "2f002400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "o1" = [13], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1431

[[opcode]]
call = "vector_shift_right_sisd_decode"
args = ["Rd", "Rn", "o0", "o1", "immb", "immh", "U"]
bits = "5f000400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "o1" = [13], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1432

[[opcode]]
call = "integer_conditional_select_decode"
args = ["Rd", "Rn", "o2", "cond", "Rm", "S", "op", "sf"]
bits = "1a800000"
mask = "7fe00c00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o2" = [10], "cond" = [15, 12], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1433

[[opcode]]
call = "vector_shift_leftsat_simd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U", "Q"]
bits = "0f007400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1434

[[opcode]]
call = "float_convert_int_decode"
args = ["Rd", "Rn", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e280000"
mask = "7f3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1435

[[opcode]]
call = "integer_tags_mcsettagpairandzerodata_decode"
args = ["Rt", "Xn", "imm9"]
bits = "19a00800"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Xn" = [9, 5], "imm9" = [20, 12] }
see = 1436

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_int_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "size", "U", "Q"]
bits = "2f000000"
mask = "bf00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1437

[[opcode]]
call = "integer_arithmetic_rev_decode"
args = ["Rd", "Rn", "opc", "opcode2", "S", "sf"]
bits = "dac00800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opc" = [11, 10], "opcode2" = [20, 16], "S" = [29], "sf" = [31] }
see = 1438

[[opcode]]
call = "memory_single_general_immediate_signed_postidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "38800400"
mask = "ffa00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1439

[[opcode]]
call = "memory_pair_simdfp_postidx_memory_pair_simdfp_postidx__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "2c800000"
mask = "3fc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1440

[[opcode]]
call = "vector_reduce_intmax_decode"
args = ["Rd", "Rn", "op", "size", "U", "Q"]
bits = "0e31a800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1441

[[opcode]]
call = "memory_pair_general_preidx_memory_pair_general_postidx__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "29800000"
mask = "7fc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1442

[[opcode]]
call = "vector_reduce_fpmaxnm_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "o1", "U"]
bits = "7e30c800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "o1" = [23], "U" = [29] }
see = 1443

[[opcode]]
call = "memory_vector_multiple_nowb_memory_vector_multiple_nowb__decode"
args = ["Rt", "Rn", "size", "opcode", "L", "Q"]
bits = "0c404000"
mask = "bffff000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "opcode" = [15, 12], "L" = [22], "Q" = [30] }
see = 1444

[[opcode]]
call = "memory_single_general_immediate_signed_offset_lda_stl_memory_single_general_immediate_signed_offset_lda_stl__decode"
args = ["Rt", "Rn", "imm9", "opc", "size"]
bits = "59400000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "size" = [31, 30] }
see = 1445

[[opcode]]
call = "system_hints_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d503209f"
mask = "ffffffff"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1446

[[opcode]]
call = "integer_arithmetic_div_decode"
args = ["Rd", "Rn", "o1", "opcode2_5_1_", "Rm", "S", "op", "sf"]
bits = "1ac00c00"
mask = "7fe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [10], "opcode2_5_1_" = [15, 11], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1447

[[opcode]]
call = "memory_single_general_register_memory_single_general_register__decode"
args = ["Rt", "Rn", "S", "option_name", "Rm", "opc", "V", "size"]
bits = "38600800"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "S" = [12], "option_name" = [15, 13], "Rm" = [20, 16], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1448

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_pair_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "2e20a400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1449

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b820601f"
mask = "bfa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1450

[[opcode]]
call = "vector_arithmetic_unary_cmp_int_bulk_sisd_decode"
args = ["Rd", "Rn", "op", "size", "U"]
bits = "5e208800"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "size" = [23, 22], "U" = [29] }
see = 1451

[[opcode]]
call = "memory_vector_single_postinc_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "Rm", "R", "L", "Q"]
bits = "0d800000"
mask = "bfe02000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "Rm" = [20, 16], "R" = [21], "L" = [22], "Q" = [30] }
see = 1452

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_int_sisd_decode"
args = ["Rd", "Rn", "opcode", "a", "U"]
bits = "7e79d800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "a" = [23], "U" = [29] }
see = 1453

[[opcode]]
call = "vector_arithmetic_binary_uniform_rsqrts_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "U"]
bits = "5ea0fc00"
mask = "ffa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "U" = [29] }
see = 1454

[[opcode]]
call = "vector_arithmetic_unary_special_sqrtest_float_simd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U", "Q"]
bits = "2ea1d800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1455

[[opcode]]
call = "integer_conditional_select_decode"
args = ["Rd", "Rn", "o2", "cond", "Rm", "S", "op", "sf"]
bits = "5a800000"
mask = "7fe00c00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o2" = [10], "cond" = [15, 12], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1456

[[opcode]]
call = "vector_arithmetic_unary_cmp_fp16_bulk_simd_decode"
args = ["Rd", "Rn", "op", "a", "U", "Q"]
bits = "0ef8c800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "a" = [23], "U" = [29], "Q" = [30] }
see = 1457

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "7820701f"
mask = "ffa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1458

[[opcode]]
call = "float_compare_uncond_decode"
args = ["opc", "Rn", "op", "Rm", "typ", "S", "M"]
bits = "1e202000"
mask = "ff20fc17"
slice = { "opc" = [4, 3], "Rn" = [9, 5], "op" = [15, 14], "Rm" = [20, 16], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1459

[[opcode]]
call = "vector_transfer_vector_permute_transpose_decode"
args = ["Rd", "Rn", "op", "Rm", "size", "Q"]
bits = "0e002800"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [14], "Rm" = [20, 16], "size" = [23, 22], "Q" = [30] }
see = 1460

[[opcode]]
call = "branch_conditional_test_decode"
args = ["Rt", "imm14", "b40", "op", "b5"]
bits = "36000000"
mask = "7f000000"
slice = { "Rt" = [4, 0], "imm14" = [18, 5], "b40" = [23, 19], "op" = [24], "b5" = [31] }
see = 1461

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b820201f"
mask = "bfa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1462

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_fp_simd_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "sz", "U", "Q"]
bits = "0f805000"
mask = "bf80f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1463

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_int_simd_decode"
args = ["Rd", "Rn", "eq", "Rm", "size", "U", "Q"]
bits = "2e203400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "eq" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1464

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "7820501f"
mask = "ffa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1465

[[opcode]]
call = "memory_vector_single_nowb_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "R", "L", "Q"]
bits = "0d002000"
mask = "bfff2000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "R" = [21], "L" = [22], "Q" = [30] }
see = 1466

[[opcode]]
call = "vector_crypto_sha3op_sha1sched0_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size"]
bits = "5e003000"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [14, 12], "Rm" = [20, 16], "size" = [23, 22] }
see = 1467

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_bulk_sisd_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U"]
bits = "7ea1b800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29] }
see = 1468

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_fp16_sisd_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "size", "U"]
bits = "5f005000"
mask = "ffc0f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29] }
see = 1469

[[opcode]]
call = "vector_transfer_vector_permute_unzip_decode"
args = ["Rd", "Rn", "op", "Rm", "size", "Q"]
bits = "0e005800"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [14], "Rm" = [20, 16], "size" = [23, 22], "Q" = [30] }
see = 1470

[[opcode]]
call = "vector_arithmetic_unary_fp16_round_decode"
args = ["Rd", "Rn", "o1", "o2", "U", "Q"]
bits = "0e799800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1471

[[opcode]]
call = "memory_vector_single_postinc_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "Rm", "R", "L", "Q"]
bits = "0de0e000"
mask = "bfe0f000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "Rm" = [20, 16], "R" = [21], "L" = [22], "Q" = [30] }
see = 1472

[[opcode]]
call = "integer_arithmetic_mul_widening_64128hi_decode"
args = ["Rd", "Rn", "Ra", "o0", "Rm", "U", "op54", "sf"]
bits = "9bc00000"
mask = "ffe08000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Ra" = [14, 10], "o0" = [15], "Rm" = [20, 16], "U" = [23], "op54" = [30, 29], "sf" = [31] }
see = 1473

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_fp16_simd_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "size", "U", "Q"]
bits = "0f001000"
mask = "bfc0f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1474

[[opcode]]
call = "integer_shift_variable_decode"
args = ["Rd", "Rn", "op2", "opcode2_5_2_", "Rm", "S", "op", "sf"]
bits = "1ac02c00"
mask = "7fe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op2" = [11, 10], "opcode2_5_2_" = [15, 12], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1475

[[opcode]]
call = "vector_arithmetic_binary_uniform_logical_bsleor_decode"
args = ["Rd", "Rn", "opcode", "Rm", "opc2", "U", "Q"]
bits = "2ea01c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "opc2" = [23, 22], "U" = [29], "Q" = [30] }
see = 1476

[[opcode]]
call = "vector_arithmetic_binary_element_mul_double_simd_decode"
args = ["Rd", "Rn", "H", "opcode", "Rm", "M", "L", "size", "U", "Q"]
bits = "0f00b000"
mask = "bf00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "opcode" = [15, 12], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1477

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "78203000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1478

[[opcode]]
call = "integer_tags_mcgettagarray_decode"
args = ["Xt", "Xn"]
bits = "d5022400"
mask = "fffffc00"
slice = { "Xt" = [4, 0], "Xn" = [9, 5] }
see = 1479

[[opcode]]
call = "vector_arithmetic_unary_float_narrow_decode"
args = ["Rd", "Rn", "opcode", "sz", "U", "Q"]
bits = "0e216800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1480

[[opcode]]
call = "vector_arithmetic_unary_special_recip_int_decode"
args = ["Rd", "Rn", "opcode", "sz", "U", "Q"]
bits = "0ea1c800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1481

[[opcode]]
call = "memory_exclusive_single_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "88008000"
mask = "bfe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1482

[[opcode]]
call = "vector_arithmetic_binary_element_mul_high_simd_decode"
args = ["Rd", "Rn", "H", "op", "Rm", "M", "L", "size", "U", "Q"]
bits = "0f00d000"
mask = "bf00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "op" = [12], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1483

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_fp16_extended_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "a", "U", "Q"]
bits = "0e401c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29], "Q" = [30] }
see = 1484

[[opcode]]
call = "float_convert_int_decode"
args = ["Rd", "Rn", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e380000"
mask = "7f3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1485

[[opcode]]
call = "integer_insext_insert_movewide_decode"
args = ["Rd", "imm16", "hw", "opc", "sf"]
bits = "52800000"
mask = "7f800000"
slice = { "Rd" = [4, 0], "imm16" = [20, 5], "hw" = [22, 21], "opc" = [30, 29], "sf" = [31] }
see = 1486

[[opcode]]
call = "vector_arithmetic_unary_float_conv_int_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U"]
bits = "7e21d800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29] }
see = 1487

[[opcode]]
call = "vector_arithmetic_unary_special_sqrt_decode"
args = ["Rd", "Rn", "opcode", "sz", "U", "Q"]
bits = "2ea1f800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1488

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_fp_2008_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "o1", "U", "Q"]
bits = "2e20c400"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1489

[[opcode]]
call = "memory_vector_single_postinc_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "Rm", "R", "L", "Q"]
bits = "0dc0c000"
mask = "bfe0f000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "Rm" = [20, 16], "R" = [21], "L" = [22], "Q" = [30] }
see = 1490

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b820101f"
mask = "bfa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1491

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_int_simd_decode"
args = ["Rd", "Rn", "eq", "Rm", "size", "U", "Q"]
bits = "0e203c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "eq" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1492

[[opcode]]
call = "float_arithmetic_round_frint_decode"
args = ["Rd", "Rn", "rmode", "typ", "S", "M"]
bits = "1e264000"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "rmode" = [17, 15], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1493

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "3820001f"
mask = "ffa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1494

[[opcode]]
call = "vector_shift_conv_float_simd_decode"
args = ["Rd", "Rn", "opcode", "immb", "immh", "U", "Q"]
bits = "2f00fc00"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1495

[[opcode]]
call = "vector_arithmetic_binary_disparate_diff_decode"
args = ["Rd", "Rn", "op", "Rm", "size", "U", "Q"]
bits = "2e207000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1496

[[opcode]]
call = "vector_arithmetic_unary_diffneg_sat_simd_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "0e207800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1497

[[opcode]]
call = "branch_conditional_cond_decode"
args = ["cond", "o0", "imm19", "o1"]
bits = "54000000"
mask = "ff000010"
slice = { "cond" = [3, 0], "o0" = [4], "imm19" = [23, 5], "o1" = [24] }
see = 1498

[[opcode]]
call = "vector_arithmetic_binary_element_mul_fp16_sisd_decode"
args = ["Rd", "Rn", "H", "opcode", "Rm", "M", "L", "size", "U"]
bits = "5f009000"
mask = "ffc0f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "opcode" = [15, 12], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29] }
see = 1499

[[opcode]]
call = "vector_shift_leftsat_simd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U", "Q"]
bits = "2f006400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1500

[[opcode]]
call = "memory_single_simdfp_register_memory_single_simdfp_register__decode"
args = ["Rt", "Rn", "S", "option_name", "Rm", "opc", "V", "size"]
bits = "3c600800"
mask = "3f600c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "S" = [12], "option_name" = [15, 13], "Rm" = [20, 16], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1501

[[opcode]]
call = "memory_vector_multiple_postinc_memory_vector_multiple_nowb__decode"
args = ["Rt", "Rn", "size", "opcode", "Rm", "L", "Q"]
bits = "0cc08000"
mask = "bfe0f000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "opcode" = [15, 12], "Rm" = [20, 16], "L" = [22], "Q" = [30] }
see = 1502

[[opcode]]
call = "vector_transfer_integer_insert_decode"
args = ["Rd", "Rn", "imm4", "imm5", "op", "Q"]
bits = "4e001c00"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm4" = [14, 11], "imm5" = [20, 16], "op" = [29], "Q" = [30] }
see = 1503

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_saturating_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "2e200c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1504

[[opcode]]
call = "vector_reduce_fpmax_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "o1", "U"]
bits = "7eb0f800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "o1" = [23], "U" = [29] }
see = 1505

[[opcode]]
call = "vector_arithmetic_binary_uniform_shift_sisd_decode"
args = ["Rd", "Rn", "S", "R", "Rm", "size", "U"]
bits = "5e205400"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "R" = [12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1506

[[opcode]]
call = "memory_pair_simdfp_noalloc_memory_pair_simdfp_noalloc__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "2c400000"
mask = "3fc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1507

[[opcode]]
call = "memory_single_general_register_memory_single_general_register__decode"
args = ["Rt", "Rn", "S", "option_name", "Rm", "opc", "V", "size"]
bits = "38a00800"
mask = "ffa00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "S" = [12], "option_name" = [15, 13], "Rm" = [20, 16], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1508

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_mul_norounding_i_lower_decode"
args = ["Rd", "Rn", "H", "S", "Rm", "M", "L", "sz", "Q"]
bits = "0f800000"
mask = "bf80b400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "S" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "sz" = [22], "Q" = [30] }
see = 1509

[[opcode]]
call = "float_arithmetic_mul_addsub_decode"
args = ["Rd", "Rn", "Ra", "o0", "Rm", "o1", "typ", "S", "M"]
bits = "1f208000"
mask = "ff208000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Ra" = [14, 10], "o0" = [15], "Rm" = [20, 16], "o1" = [21], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1510

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_int_sisd_decode"
args = ["Rd", "Rn", "eq", "Rm", "size", "U"]
bits = "5e203400"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "eq" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1511

[[opcode]]
call = "memory_single_simdfp_immediate_signed_postidx_memory_single_simdfp_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "3c000400"
mask = "3f600c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1512

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_fp_1985_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "o1", "U", "Q"]
bits = "2e20f400"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1513

[[opcode]]
call = "memory_single_general_immediate_signed_offset_normal_memory_single_general_immediate_signed_offset_normal__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "b8800000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1514

[[opcode]]
call = "memory_single_general_immediate_signed_offset_normal_memory_single_general_immediate_signed_offset_normal__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "78000000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1515

[[opcode]]
call = "float_arithmetic_mul_product_decode"
args = ["Rd", "Rn", "op", "Rm", "typ", "S", "M"]
bits = "1e200800"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [15], "Rm" = [20, 16], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1516

[[opcode]]
call = "integer_pac_pacia_hint_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d503211f"
mask = "fffffddf"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1517

[[opcode]]
call = "float_convert_int_decode"
args = ["Rd", "Rn", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e300000"
mask = "7f3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1518

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_saturating_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "0e200c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1519

[[opcode]]
call = "float_compare_uncond_decode"
args = ["opc", "Rn", "op", "Rm", "typ", "S", "M"]
bits = "1e202010"
mask = "ff20fc17"
slice = { "opc" = [4, 3], "Rn" = [9, 5], "op" = [15, 14], "Rm" = [20, 16], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1520

[[opcode]]
call = "vector_arithmetic_binary_disparate_addsub_narrow_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "0e204000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1521

[[opcode]]
call = "branch_unconditional_register_decode"
args = ["Rm", "Rn", "M", "A", "op2", "op", "Z"]
bits = "d65f0000"
mask = "fffffc1f"
slice = { "Rm" = [4, 0], "Rn" = [9, 5], "M" = [10], "A" = [11], "op2" = [20, 16], "op" = [22, 21], "Z" = [24] }
see = 1522

[[opcode]]
call = "float_convert_fp_decode"
args = ["Rd", "Rn", "opc", "typ", "S", "M"]
bits = "1e224000"
mask = "ff3e7c00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opc" = [16, 15], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1523

[[opcode]]
call = "memory_exclusive_single_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "88408000"
mask = "bfe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1524

[[opcode]]
call = "vector_arithmetic_unary_clsz_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "2e204800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1525

[[opcode]]
call = "integer_tags_mcsettagpairpost_decode"
args = ["Rt", "Xn", "imm9"]
bits = "19200400"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Xn" = [9, 5], "imm9" = [20, 12] }
see = 1526

[[opcode]]
call = "memory_single_general_immediate_signed_preidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "38000c00"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1527

[[opcode]]
call = "integer_pac_pacib_dp_1src_decode"
args = ["Rd", "Rn", "Z", "opcode2", "S", "sf"]
bits = "dac10400"
mask = "ffffdc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Z" = [13], "opcode2" = [20, 16], "S" = [29], "sf" = [31] }
see = 1528

[[opcode]]
call = "float_convert_int_decode"
args = ["Rd", "Rn", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e260000"
mask = "7f36fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1529

[[opcode]]
call = "memory_single_general_immediate_unsigned_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm12", "opc", "V", "size"]
bits = "b9400000"
mask = "bfc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm12" = [21, 10], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1530

[[opcode]]
call = "memory_single_general_immediate_signed_preidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "b8000c00"
mask = "bfe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1531

[[opcode]]
call = "vector_arithmetic_binary_element_mul_fp_simd_decode"
args = ["Rd", "Rn", "H", "opcode", "Rm", "M", "L", "sz", "U", "Q"]
bits = "0f809000"
mask = "bf80f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "opcode" = [15, 12], "Rm" = [19, 16], "M" = [20], "L" = [21], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1532

[[opcode]]
call = "memory_ordered_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "88808000"
mask = "bfe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1533

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_long_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "size", "U", "Q"]
bits = "0f006000"
mask = "bf00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1534

[[opcode]]
call = "memory_single_general_immediate_signed_offset_lda_stl_memory_single_general_immediate_signed_offset_lda_stl__decode"
args = ["Rt", "Rn", "imm9", "opc", "size"]
bits = "d9400000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "size" = [31, 30] }
see = 1535

[[opcode]]
call = "vector_arithmetic_binary_element_mul_fp16_simd_decode"
args = ["Rd", "Rn", "H", "opcode", "Rm", "M", "L", "size", "U", "Q"]
bits = "2f009000"
mask = "bfc0f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "opcode" = [15, 12], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1536

[[opcode]]
call = "vector_arithmetic_binary_disparate_addsub_wide_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "2e201000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1537

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_int_doubling_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "2e20b400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1538

[[opcode]]
call = "memory_single_general_immediate_signed_offset_normal_memory_single_general_immediate_signed_offset_normal__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "38400000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1539

[[opcode]]
call = "vector_transfer_vector_table_decode"
args = ["Rd", "Rn", "op", "len", "Rm", "op2", "Q"]
bits = "0e000000"
mask = "bfe09c00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "len" = [14, 13], "Rm" = [20, 16], "op2" = [23, 22], "Q" = [30] }
see = 1540

[[opcode]]
call = "integer_insext_insert_movewide_decode"
args = ["Rd", "imm16", "hw", "opc", "sf"]
bits = "12800000"
mask = "7f800000"
slice = { "Rd" = [4, 0], "imm16" = [20, 5], "hw" = [22, 21], "opc" = [30, 29], "sf" = [31] }
see = 1541

[[opcode]]
call = "vector_arithmetic_binary_disparate_addsub_wide_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "0e203000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1542

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_fp16_2008_decode"
args = ["Rd", "Rn", "Op3", "Rm", "a", "U", "Q"]
bits = "0ec00400"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Op3" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29], "Q" = [30] }
see = 1543

[[opcode]]
call = "system_exceptions_debug_exception_decode"
args = ["LL", "op2", "imm16", "opc"]
bits = "d4a00002"
mask = "ffe0001f"
slice = { "LL" = [1, 0], "op2" = [4, 2], "imm16" = [20, 5], "opc" = [23, 21] }
see = 1544

[[opcode]]
call = "vector_arithmetic_binary_disparate_mul_dmacc_sisd_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U"]
bits = "5e20b000"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1545

[[opcode]]
call = "vector_shift_right_sisd_decode"
args = ["Rd", "Rn", "o0", "o1", "immb", "immh", "U"]
bits = "7f003400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "o1" = [13], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1546

[[opcode]]
call = "vector_shift_right_simd_decode"
args = ["Rd", "Rn", "o0", "o1", "immb", "immh", "U", "Q"]
bits = "0f002400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "o1" = [13], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1547

[[opcode]]
call = "vector_arithmetic_unary_extract_sqxtun_simd_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "2e212800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1548

[[opcode]]
call = "memory_orderedrcpc_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "38a0c000"
mask = "ffe0fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1549

[[opcode]]
call = "vector_shift_rightnarrow_nonuniform_simd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U", "Q"]
bits = "2f008400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1550

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp_sisd_decode"
args = ["Rd", "Rn", "ac", "Rm", "sz", "E", "U"]
bits = "7ea0ec00"
mask = "ffa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "sz" = [22], "E" = [23], "U" = [29] }
see = 1551

[[opcode]]
call = "vector_arithmetic_unary_rbit_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "2e605800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1552

[[opcode]]
call = "vector_arithmetic_unary_cmp_float_bulk_simd_decode"
args = ["Rd", "Rn", "op", "sz", "U", "Q"]
bits = "2ea0d800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1553

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "38201000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1554

[[opcode]]
call = "vector_crypto_sha3op_sha1hash_choose_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size"]
bits = "5e000000"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [14, 12], "Rm" = [20, 16], "size" = [23, 22] }
see = 1555

[[opcode]]
call = "vector_arithmetic_unary_special_sqrtest_fp16_simd_decode"
args = ["Rd", "Rn", "opcode", "a", "U", "Q"]
bits = "2ef9d800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "a" = [23], "U" = [29], "Q" = [30] }
see = 1556

[[opcode]]
call = "system_exceptions_runtime_hvc_decode"
args = ["LL", "op2", "imm16", "opc"]
bits = "d4000002"
mask = "ffe0001f"
slice = { "LL" = [1, 0], "op2" = [4, 2], "imm16" = [20, 5], "opc" = [23, 21] }
see = 1557

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_fp_fused_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "op", "U", "Q"]
bits = "0e20cc00"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "op" = [23], "U" = [29], "Q" = [30] }
see = 1558

[[opcode]]
call = "integer_tags_mcsettag_decode"
args = ["Rt", "Xn", "imm9"]
bits = "19000800"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Xn" = [9, 5], "imm9" = [20, 12] }
see = 1559

[[opcode]]
call = "vector_arithmetic_unary_extract_sat_simd_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "0e214800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1560

[[opcode]]
call = "integer_arithmetic_pointer_mcsubtracttaggedaddress_decode"
args = ["Xd", "Xn", "Xm"]
bits = "9ac00000"
mask = "ffe0fc00"
slice = { "Xd" = [4, 0], "Xn" = [9, 5], "Xm" = [20, 16] }
see = 1561

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_complex_decode"
args = ["Rd", "Rn", "H", "rot", "Rm", "M", "L", "size", "U", "Q"]
bits = "2f001000"
mask = "bf009400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "rot" = [14, 13], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1562

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_bulk_sisd_decode"
args = ["Rd", "Rn", "o1", "o2", "U"]
bits = "5ef9b800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29] }
see = 1563

[[opcode]]
call = "vector_arithmetic_binary_disparate_mul_dmacc_simd_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "0e209000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1564

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_mul_norounding_i_upper_decode"
args = ["Rd", "Rn", "H", "S", "Rm", "M", "L", "sz", "Q"]
bits = "2f808000"
mask = "bf80b400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "S" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "sz" = [22], "Q" = [30] }
see = 1565

[[opcode]]
call = "memory_atomicops_swp_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b8208000"
mask = "bf20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1566

[[opcode]]
call = "vector_arithmetic_binary_uniform_logical_bsleor_decode"
args = ["Rd", "Rn", "opcode", "Rm", "opc2", "U", "Q"]
bits = "2e201c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "opc2" = [23, 22], "U" = [29], "Q" = [30] }
see = 1567

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_bulk_simd_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U", "Q"]
bits = "0e21b800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1568

[[opcode]]
call = "memory_single_simdfp_immediate_signed_offset_normal_memory_single_simdfp_immediate_signed_offset_normal__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "3c000000"
mask = "3f600c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1569

[[opcode]]
call = "memory_single_general_immediate_signed_preidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "78400c00"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1570

[[opcode]]
call = "vector_shift_rightnarrow_uniform_simd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U", "Q"]
bits = "0f009c00"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1571

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_pair_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "0e20ac00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1572

[[opcode]]
call = "vector_arithmetic_unary_float_round_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U", "Q"]
bits = "0e218800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1573

[[opcode]]
call = "vector_reduce_addlong_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "2e303800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1574

[[opcode]]
call = "vector_arithmetic_unary_special_sqrtfp16_decode"
args = ["Rd", "Rn", "opcode", "a", "U", "Q"]
bits = "2ef9f800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "a" = [23], "U" = [29], "Q" = [30] }
see = 1575

[[opcode]]
call = "vector_arithmetic_unary_add_pairwise_decode"
args = ["Rd", "Rn", "op", "size", "U", "Q"]
bits = "2e202800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [14], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1576

[[opcode]]
call = "vector_shift_conv_int_simd_decode"
args = ["Rd", "Rn", "opcode", "immb", "immh", "U", "Q"]
bits = "0f00e400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1577

[[opcode]]
call = "vector_arithmetic_unary_special_recip_fp16_simd_decode"
args = ["Rd", "Rn", "opcode", "a", "U", "Q"]
bits = "0ef9d800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "a" = [23], "U" = [29], "Q" = [30] }
see = 1578

[[opcode]]
call = "integer_logical_immediate_decode"
args = ["Rd", "Rn", "imms", "immr", "N", "opc", "sf"]
bits = "52000000"
mask = "7f800000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imms" = [15, 10], "immr" = [21, 16], "N" = [22], "opc" = [30, 29], "sf" = [31] }
see = 1579

[[opcode]]
call = "memory_single_general_immediate_signed_offset_unpriv_memory_single_general_immediate_signed_offset_unpriv__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "78800800"
mask = "ffa00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1580

[[opcode]]
call = "vector_arithmetic_unary_cmp_int_bulk_sisd_decode"
args = ["Rd", "Rn", "op", "size", "U"]
bits = "5e209800"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "size" = [23, 22], "U" = [29] }
see = 1581

[[opcode]]
call = "memory_pair_simdfp_postidx_memory_pair_simdfp_postidx__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "2cc00000"
mask = "3fc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1582

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_single_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "0e206400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1583

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b8205000"
mask = "bf20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1584

[[opcode]]
call = "integer_tags_mcsettagandzerodata_decode"
args = ["Rt", "Xn", "imm9"]
bits = "19800800"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Xn" = [9, 5], "imm9" = [20, 12] }
see = 1585

[[opcode]]
call = "vector_arithmetic_binary_uniform_shift_simd_decode"
args = ["Rd", "Rn", "S", "R", "Rm", "size", "U", "Q"]
bits = "0e204400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "R" = [12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1586

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp16_simd_decode"
args = ["Rd", "Rn", "ac", "Rm", "E", "U", "Q"]
bits = "0e402400"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "E" = [23], "U" = [29], "Q" = [30] }
see = 1587

[[opcode]]
call = "vector_shift_right_simd_decode"
args = ["Rd", "Rn", "o0", "o1", "immb", "immh", "U", "Q"]
bits = "2f000400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "o1" = [13], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1588

[[opcode]]
call = "vector_arithmetic_binary_disparate_addsub_wide_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "2e203000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1589

[[opcode]]
call = "vector_reduce_fpmax_simd_decode"
args = ["Rd", "Rn", "opcode", "sz", "o1", "U", "Q"]
bits = "2e30f800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1590

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_int_product_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "2e209c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1591

[[opcode]]
call = "vector_arithmetic_binary_uniform_diff_decode"
args = ["Rd", "Rn", "ac", "Rm", "size", "U", "Q"]
bits = "2e207c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1592

[[opcode]]
call = "vector_arithmetic_unary_fp16_round_decode"
args = ["Rd", "Rn", "o1", "o2", "U", "Q"]
bits = "2ef99800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1593

[[opcode]]
call = "system_hints_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d503201f"
mask = "fffff01f"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1594

[[opcode]]
call = "memory_vector_single_nowb_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "R", "L", "Q"]
bits = "0d402000"
mask = "bfff2000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "R" = [21], "L" = [22], "Q" = [30] }
see = 1595

[[opcode]]
call = "memory_atomicops_cas_single_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "48a07c00"
mask = "ffa07c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1596

[[opcode]]
call = "branch_unconditional_immediate_decode"
args = ["imm26", "op"]
bits = "94000000"
mask = "fc000000"
slice = { "imm26" = [25, 0], "op" = [31] }
see = 1597

[[opcode]]
call = "memory_single_general_immediate_signed_offset_unpriv_memory_single_general_immediate_signed_offset_unpriv__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "78400800"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1598

[[opcode]]
call = "vector_arithmetic_unary_float_xtn_simd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U", "Q"]
bits = "2e216800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1599

[[opcode]]
call = "integer_pac_pacia_dp_1src_decode"
args = ["Rd", "Rn", "Z", "opcode2", "S", "sf"]
bits = "dac10000"
mask = "ffffdc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Z" = [13], "opcode2" = [20, 16], "S" = [29], "sf" = [31] }
see = 1600

[[opcode]]
call = "vector_arithmetic_unary_cmp_float_bulk_simd_decode"
args = ["Rd", "Rn", "op", "sz", "U", "Q"]
bits = "0ea0c800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1601

[[opcode]]
call = "vector_crypto_sha3op_sha1hash_parity_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size"]
bits = "5e001000"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [14, 12], "Rm" = [20, 16], "size" = [23, 22] }
see = 1602

[[opcode]]
call = "vector_crypto_sha2op_sha256sched0_decode"
args = ["Rd", "Rn", "opcode", "size"]
bits = "5e282800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22] }
see = 1603

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_high_simd_decode"
args = ["Rd", "Rn", "H", "S", "Rm", "M", "L", "size", "U", "Q"]
bits = "2f00f000"
mask = "bf00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "S" = [13], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1604

[[opcode]]
call = "integer_tags_mcsettagarray_decode"
args = ["Xt", "Xn"]
bits = "d5022000"
mask = "fffffc00"
slice = { "Xt" = [4, 0], "Xn" = [9, 5] }
see = 1605

[[opcode]]
call = "vector_arithmetic_unary_cmp_int_lessthan_sisd_decode"
args = ["Rd", "Rn", "opcode", "size", "U"]
bits = "5e20a800"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29] }
see = 1606

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_wrapping_single_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U"]
bits = "5e208400"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1607

[[opcode]]
call = "memory_vector_multiple_nowb_memory_vector_multiple_nowb__decode"
args = ["Rt", "Rn", "size", "opcode", "L", "Q"]
bits = "0c400000"
mask = "bffff000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "opcode" = [15, 12], "L" = [22], "Q" = [30] }
see = 1608

[[opcode]]
call = "vector_shift_conv_float_sisd_decode"
args = ["Rd", "Rn", "opcode", "immb", "immh", "U"]
bits = "5f00fc00"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1609

[[opcode]]
call = "integer_flags_axflag_decode"
args = ["CRm"]
bits = "d500405f"
mask = "fffff0ff"
slice = { "CRm" = [11, 8] }
see = 1610

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_single_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "2e206400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1611

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_int_accum_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "0e209400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1612

[[opcode]]
call = "float_convert_int_decode"
args = ["Rd", "Rn", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e220000"
mask = "7f3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1613

[[opcode]]
call = "integer_logical_immediate_decode"
args = ["Rd", "Rn", "imms", "immr", "N", "opc", "sf"]
bits = "12000000"
mask = "7f800000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imms" = [15, 10], "immr" = [21, 16], "N" = [22], "opc" = [30, 29], "sf" = [31] }
see = 1614

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_fp_1985_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "o1", "U", "Q"]
bits = "0e20f400"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1615

[[opcode]]
call = "integer_conditional_compare_immediate_decode"
args = ["nzcv", "o3", "Rn", "o2", "cond", "imm5", "S", "op", "sf"]
bits = "7a400800"
mask = "7fe00c10"
slice = { "nzcv" = [3, 0], "o3" = [4], "Rn" = [9, 5], "o2" = [10], "cond" = [15, 12], "imm5" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1616

[[opcode]]
call = "vector_arithmetic_unary_cmp_float_lessthan_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U"]
bits = "5ea0e800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29] }
see = 1617

[[opcode]]
call = "memory_ordered_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "88800000"
mask = "bfe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1618

[[opcode]]
call = "float_convert_int_decode"
args = ["Rd", "Rn", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e390000"
mask = "7f3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1619

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "7820001f"
mask = "ffa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1620

[[opcode]]
call = "system_hints_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d503223f"
mask = "ffffffff"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1621

[[opcode]]
call = "system_sysops_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d5280000"
mask = "fff80000"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1622

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_bitwise_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "0e208c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1623

[[opcode]]
call = "vector_shift_rightnarrow_uniform_sisd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U"]
bits = "7f009c00"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1624

[[opcode]]
call = "memory_single_general_immediate_signed_offset_lda_stl_memory_single_general_immediate_signed_offset_lda_stl__decode"
args = ["Rt", "Rn", "imm9", "opc", "size"]
bits = "19800000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "size" = [31, 30] }
see = 1625

[[opcode]]
call = "float_arithmetic_mul_product_decode"
args = ["Rd", "Rn", "op", "Rm", "typ", "S", "M"]
bits = "1e208800"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [15], "Rm" = [20, 16], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1626

[[opcode]]
call = "vector_arithmetic_unary_add_saturating_simd_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "0e203800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1627

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_double_simd_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "size", "U", "Q"]
bits = "0f003000"
mask = "bf00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1628

[[opcode]]
call = "vector_arithmetic_binary_disparate_mul_poly_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "0e20e000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1629

[[opcode]]
call = "float_arithmetic_round_frint_decode"
args = ["Rd", "Rn", "rmode", "typ", "S", "M"]
bits = "1e274000"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "rmode" = [17, 15], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1630

[[opcode]]
call = "memory_vector_multiple_nowb_memory_vector_multiple_nowb__decode"
args = ["Rt", "Rn", "size", "opcode", "L", "Q"]
bits = "0c002000"
mask = "bfff2000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "opcode" = [15, 12], "L" = [22], "Q" = [30] }
see = 1631

[[opcode]]
call = "memory_single_general_immediate_signed_pac_decode"
args = ["Rt", "Rn", "W", "imm9", "S", "M", "V", "size"]
bits = "f8200400"
mask = "ff200400"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "W" = [11], "imm9" = [20, 12], "S" = [22], "M" = [23], "V" = [26], "size" = [31, 30] }
see = 1632

[[opcode]]
call = "memory_vector_multiple_postinc_memory_vector_multiple_nowb__decode"
args = ["Rt", "Rn", "size", "opcode", "Rm", "L", "Q"]
bits = "0c802000"
mask = "bfe02000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "opcode" = [15, 12], "Rm" = [20, 16], "L" = [22], "Q" = [30] }
see = 1633

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp_sisd_decode"
args = ["Rd", "Rn", "ac", "Rm", "sz", "E", "U"]
bits = "7e20e400"
mask = "ffa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "sz" = [22], "E" = [23], "U" = [29] }
see = 1634

[[opcode]]
call = "vector_arithmetic_binary_uniform_shift_sisd_decode"
args = ["Rd", "Rn", "S", "R", "Rm", "size", "U"]
bits = "7e204400"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "R" = [12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1635

[[opcode]]
call = "system_sysops_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d5080000"
mask = "fff80000"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1636

[[opcode]]
call = "branch_unconditional_register_decode"
args = ["Rm", "Rn", "M", "A", "op2", "op", "Z"]
bits = "d61f0000"
mask = "fffffc1f"
slice = { "Rm" = [4, 0], "Rn" = [9, 5], "M" = [10], "A" = [11], "op2" = [20, 16], "op" = [22, 21], "Z" = [24] }
see = 1637

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_fp_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "U", "Q"]
bits = "0e20d400"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1638

[[opcode]]
call = "memory_single_general_immediate_signed_offset_lda_stl_memory_single_general_immediate_signed_offset_lda_stl__decode"
args = ["Rt", "Rn", "imm9", "opc", "size"]
bits = "59000000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "size" = [31, 30] }
see = 1639

[[opcode]]
call = "vector_arithmetic_binary_uniform_shift_simd_decode"
args = ["Rd", "Rn", "S", "R", "Rm", "size", "U", "Q"]
bits = "2e205c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "R" = [12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1640

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_bulk_sisd_decode"
args = ["Rd", "Rn", "o1", "o2", "U"]
bits = "5ef9a800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29] }
see = 1641

[[opcode]]
call = "integer_arithmetic_rbit_decode"
args = ["Rd", "Rn", "opcode2", "S", "sf"]
bits = "5ac00000"
mask = "7ffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode2" = [20, 16], "S" = [29], "sf" = [31] }
see = 1642

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_fp_product_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "U", "Q"]
bits = "2e20dc00"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1643

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_fp_1985_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "o1", "U", "Q"]
bits = "0ea0f400"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1644

[[opcode]]
call = "memory_single_general_immediate_signed_offset_unpriv_memory_single_general_immediate_signed_offset_unpriv__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "b8000800"
mask = "bfe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1645

[[opcode]]
call = "branch_unconditional_register_decode"
args = ["Rm", "Rn", "M", "A", "op2", "op", "Z"]
bits = "d63f0800"
mask = "fefff800"
slice = { "Rm" = [4, 0], "Rn" = [9, 5], "M" = [10], "A" = [11], "op2" = [20, 16], "op" = [22, 21], "Z" = [24] }
see = 1646

[[opcode]]
call = "vector_shift_leftinsert_simd_decode"
args = ["Rd", "Rn", "opcode", "immb", "immh", "U", "Q"]
bits = "2f005400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1647

[[opcode]]
call = "vector_arithmetic_binary_element_mul_fp_sisd_decode"
args = ["Rd", "Rn", "H", "opcode", "Rm", "M", "L", "sz", "U"]
bits = "7f809000"
mask = "ff80f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "opcode" = [15, 12], "Rm" = [19, 16], "M" = [20], "L" = [21], "sz" = [22], "U" = [29] }
see = 1648

[[opcode]]
call = "vector_arithmetic_binary_uniform_recpsfp16_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "a", "U"]
bits = "5e403c00"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29] }
see = 1649

[[opcode]]
call = "vector_shift_rightnarrow_uniform_sisd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U"]
bits = "7f009400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1650

[[opcode]]
call = "integer_pac_pacib_hint_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d503215f"
mask = "fffffddf"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1651

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_long_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "size", "U", "Q"]
bits = "2f002000"
mask = "bf00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1652

[[opcode]]
call = "float_arithmetic_maxmin_decode"
args = ["Rd", "Rn", "op", "Rm", "typ", "S", "M"]
bits = "1e205800"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [13, 12], "Rm" = [20, 16], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1653

[[opcode]]
call = "vector_arithmetic_unary_diffneg_sat_simd_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "2e207800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1654

[[opcode]]
call = "system_exceptions_debug_halt_decode"
args = ["LL", "op2", "imm16", "opc"]
bits = "d4400000"
mask = "ffe0001f"
slice = { "LL" = [1, 0], "op2" = [4, 2], "imm16" = [20, 5], "opc" = [23, 21] }
see = 1655

[[opcode]]
call = "system_hints_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d503203f"
mask = "ffffffff"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1656

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_bulk_simd_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U", "Q"]
bits = "2e21b800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1657

[[opcode]]
call = "integer_logical_immediate_decode"
args = ["Rd", "Rn", "imms", "immr", "N", "opc", "sf"]
bits = "72000000"
mask = "7f800000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imms" = [15, 10], "immr" = [21, 16], "N" = [22], "opc" = [30, 29], "sf" = [31] }
see = 1658

[[opcode]]
call = "vector_shift_rightnarrow_nonuniform_simd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U", "Q"]
bits = "2f008c00"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1659

[[opcode]]
call = "memory_single_simdfp_immediate_signed_preidx_memory_single_simdfp_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "3c400c00"
mask = "3f600c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1660

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b8204000"
mask = "bf20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1661

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_bitwise_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U"]
bits = "7e208c00"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1662

[[opcode]]
call = "vector_shift_rightnarrow_uniform_simd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U", "Q"]
bits = "0f009400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1663

[[opcode]]
call = "vector_arithmetic_binary_disparate_addsub_narrow_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "2e204000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1664

[[opcode]]
call = "vector_arithmetic_binary_uniform_recps_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "U", "Q"]
bits = "0e20fc00"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1665

[[opcode]]
call = "memory_single_general_immediate_signed_offset_lda_stl_memory_single_general_immediate_signed_offset_lda_stl__decode"
args = ["Rt", "Rn", "imm9", "opc", "size"]
bits = "d9000000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "size" = [31, 30] }
see = 1666

[[opcode]]
call = "integer_logical_shiftedreg_decode"
args = ["Rd", "Rn", "imm6", "Rm", "N", "shift", "opc", "sf"]
bits = "6a000000"
mask = "7f200000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm6" = [15, 10], "Rm" = [20, 16], "N" = [21], "shift" = [23, 22], "opc" = [30, 29], "sf" = [31] }
see = 1667

[[opcode]]
call = "float_compare_cond_decode"
args = ["nzcv", "op", "Rn", "cond", "Rm", "typ", "S", "M"]
bits = "1e200410"
mask = "ff200c10"
slice = { "nzcv" = [3, 0], "op" = [4], "Rn" = [9, 5], "cond" = [15, 12], "Rm" = [20, 16], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1668

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b8207000"
mask = "bf20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1669

[[opcode]]
call = "vector_shift_left_sisd_decode"
args = ["Rd", "Rn", "opcode", "immb", "immh", "U"]
bits = "5f005400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1670

[[opcode]]
call = "vector_arithmetic_binary_disparate_mul_accum_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "0e208000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1671

[[opcode]]
call = "vector_arithmetic_unary_special_frecpx_decode"
args = ["Rd", "Rn", "opcode", "sz", "U"]
bits = "5ea1f800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29] }
see = 1672

[[opcode]]
call = "vector_arithmetic_unary_float_round_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U", "Q"]
bits = "2ea19800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1673

[[opcode]]
call = "memory_single_general_immediate_unsigned_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm12", "opc", "V", "size"]
bits = "39400000"
mask = "ffc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm12" = [21, 10], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1674

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_int_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "size", "U", "Q"]
bits = "2f004000"
mask = "bf00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1675

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_tieaway_sisd_decode"
args = ["Rd", "Rn", "opcode", "size_1_", "U"]
bits = "7e79c800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size_1_" = [23], "U" = [29] }
see = 1676

[[opcode]]
call = "memory_exclusive_pair_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "sz"]
bits = "88608000"
mask = "bfe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "sz" = [30] }
see = 1677

[[opcode]]
call = "memory_vector_single_postinc_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "Rm", "R", "L", "Q"]
bits = "0de02000"
mask = "bfe02000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "Rm" = [20, 16], "R" = [21], "L" = [22], "Q" = [30] }
see = 1678

[[opcode]]
call = "memory_vector_single_nowb_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "R", "L", "Q"]
bits = "0d202000"
mask = "bfff2000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "R" = [21], "L" = [22], "Q" = [30] }
see = 1679

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_fp16_1985_decode"
args = ["Rd", "Rn", "opcode", "Rm", "o1", "U", "Q"]
bits = "0e403400"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1680

[[opcode]]
call = "integer_flags_cfinv_decode"
args = ["CRm"]
bits = "d500401f"
mask = "ffffffff"
slice = { "CRm" = [11, 8] }
see = 1681

[[opcode]]
call = "vector_reduce_fpadd_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U"]
bits = "7e30d800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29] }
see = 1682

[[opcode]]
call = "memory_single_general_immediate_signed_preidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "38400c00"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1683

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_single_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "0e206c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1684

[[opcode]]
call = "integer_tags_mcinsertrandomtag_decode"
args = ["Xd", "Xn", "Xm"]
bits = "9ac01000"
mask = "ffe0fc00"
slice = { "Xd" = [4, 0], "Xn" = [9, 5], "Xm" = [20, 16] }
see = 1685

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_int_simd_decode"
args = ["Rd", "Rn", "opcode", "a", "U", "Q"]
bits = "0e79d800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "a" = [23], "U" = [29], "Q" = [30] }
see = 1686

[[opcode]]
call = "integer_arithmetic_addsub_shiftedreg_decode"
args = ["Rd", "Rn", "imm6", "Rm", "shift", "S", "op", "sf"]
bits = "0b000000"
mask = "7f200000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm6" = [15, 10], "Rm" = [20, 16], "shift" = [23, 22], "S" = [29], "op" = [30], "sf" = [31] }
see = 1687

[[opcode]]
call = "float_arithmetic_maxmin_decode"
args = ["Rd", "Rn", "op", "Rm", "typ", "S", "M"]
bits = "1e206800"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [13, 12], "Rm" = [20, 16], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1688

[[opcode]]
call = "integer_conditional_select_decode"
args = ["Rd", "Rn", "o2", "cond", "Rm", "S", "op", "sf"]
bits = "5a800400"
mask = "7fe00c00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o2" = [10], "cond" = [15, 12], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1689

[[opcode]]
call = "vector_reduce_fp16maxnm_simd_decode"
args = ["Rd", "Rn", "opcode", "o1", "U", "Q"]
bits = "0eb0c800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1690

[[opcode]]
call = "integer_pac_pacga_dp_2src_decode"
args = ["Rd", "Rn", "opcode2", "Rm", "S", "op", "sf"]
bits = "9ac03000"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode2" = [15, 10], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1691

[[opcode]]
call = "vector_logical_decode"
args = ["Rd", "h", "g", "f", "e", "d", "o2", "cmode", "c", "b", "a", "op", "Q"]
bits = "0f00f400"
mask = "9ff8fc00"
slice = { "Rd" = [4, 0], "h" = [5], "g" = [6], "f" = [7], "e" = [8], "d" = [9], "o2" = [11], "cmode" = [15, 12], "c" = [16], "b" = [17], "a" = [18], "op" = [29], "Q" = [30] }
see = 1692

[[opcode]]
call = "integer_tags_mcsettagpair_decode"
args = ["Rt", "Xn", "imm9"]
bits = "19200800"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Xn" = [9, 5], "imm9" = [20, 12] }
see = 1693

[[opcode]]
call = "integer_bitfield_decode"
args = ["Rd", "Rn", "imms", "immr", "N", "opc", "sf"]
bits = "33000000"
mask = "7f800000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imms" = [15, 10], "immr" = [21, 16], "N" = [22], "opc" = [30, 29], "sf" = [31] }
see = 1694

[[opcode]]
call = "integer_crc_decode"
args = ["Rd", "Rn", "sz", "C", "opcode2_5_3_", "Rm", "S", "op", "sf"]
bits = "1ac05000"
mask = "7fe0f000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "sz" = [11, 10], "C" = [12], "opcode2_5_3_" = [15, 13], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1695

[[opcode]]
call = "vector_logical_decode"
args = ["Rd", "h", "g", "f", "e", "d", "o2", "cmode", "c", "b", "a", "op", "Q"]
bits = "2f000400"
mask = "bff80c00"
slice = { "Rd" = [4, 0], "h" = [5], "g" = [6], "f" = [7], "e" = [8], "d" = [9], "o2" = [11], "cmode" = [15, 12], "c" = [16], "b" = [17], "a" = [18], "op" = [29], "Q" = [30] }
see = 1696

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_bulk_simd_decode"
args = ["Rd", "Rn", "o1", "o2", "U", "Q"]
bits = "2e79b800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1697

[[opcode]]
call = "integer_pac_autia_hint_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d503219f"
mask = "fffffddf"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1698

[[opcode]]
call = "vector_arithmetic_binary_uniform_sub_int_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "0e202400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1699

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_tieaway_simd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U", "Q"]
bits = "2e21c800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1700

[[opcode]]
call = "vector_arithmetic_unary_cmp_fp16_bulk_sisd_decode"
args = ["Rd", "Rn", "op", "a", "U"]
bits = "7ef8d800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "a" = [23], "U" = [29] }
see = 1701

[[opcode]]
call = "vector_arithmetic_unary_cmp_fp16_bulk_sisd_decode"
args = ["Rd", "Rn", "op", "a", "U"]
bits = "7ef8c800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "a" = [23], "U" = [29] }
see = 1702

[[opcode]]
call = "integer_flags_rmif_decode"
args = ["mask", "Rn", "imm6", "sf"]
bits = "3a000400"
mask = "7fe07c10"
slice = { "mask" = [3, 0], "Rn" = [9, 5], "imm6" = [20, 15], "sf" = [31] }
see = 1703

[[opcode]]
call = "system_exceptions_runtime_svc_decode"
args = ["LL", "op2", "imm16", "opc"]
bits = "d4000001"
mask = "ffe0001f"
slice = { "LL" = [1, 0], "op2" = [4, 2], "imm16" = [20, 5], "opc" = [23, 21] }
see = 1704

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "38206000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1705

[[opcode]]
call = "vector_arithmetic_unary_add_saturating_sisd_decode"
args = ["Rd", "Rn", "opcode", "size", "U"]
bits = "7e203800"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29] }
see = 1706

[[opcode]]
call = "vector_crypto_sha3_xar_decode"
args = ["Rd", "Rn", "imm6", "Rm"]
bits = "ce800000"
mask = "ffe00000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm6" = [15, 10], "Rm" = [20, 16] }
see = 1707

[[opcode]]
call = "integer_arithmetic_address_pcrel_decode"
args = ["Rd", "immhi", "immlo", "op"]
bits = "10000000"
mask = "9f000000"
slice = { "Rd" = [4, 0], "immhi" = [23, 5], "immlo" = [30, 29], "op" = [31] }
see = 1708

[[opcode]]
call = "branch_unconditional_eret_decode"
args = ["op4", "Rn", "M", "A", "op2"]
bits = "d69f0bff"
mask = "fffffbff"
slice = { "op4" = [4, 0], "Rn" = [9, 5], "M" = [10], "A" = [11], "op2" = [20, 16] }
see = 1709

[[opcode]]
call = "memory_exclusive_single_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "48000000"
mask = "ffe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1710

[[opcode]]
call = "memory_orderedrcpc_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "78a0c000"
mask = "ffe0fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1711

[[opcode]]
call = "memory_pair_general_noalloc_memory_pair_general_noalloc__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "28400000"
mask = "7fc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1712

[[opcode]]
call = "float_arithmetic_round_frint_decode"
args = ["Rd", "Rn", "rmode", "typ", "S", "M"]
bits = "1e25c000"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "rmode" = [17, 15], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1713

[[opcode]]
call = "vector_reduce_add_simd_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "0e31b800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1714

[[opcode]]
call = "vector_arithmetic_unary_cmp_fp16_bulk_sisd_decode"
args = ["Rd", "Rn", "op", "a", "U"]
bits = "5ef8d800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "a" = [23], "U" = [29] }
see = 1715

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "78201000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1716

[[opcode]]
call = "memory_single_general_register_memory_single_general_register__decode"
args = ["Rt", "Rn", "S", "option_name", "Rm", "opc", "V", "size"]
bits = "38200800"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "S" = [12], "option_name" = [15, 13], "Rm" = [20, 16], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1717

[[opcode]]
call = "vector_arithmetic_unary_diffneg_int_sisd_decode"
args = ["Rd", "Rn", "opcode", "size", "U"]
bits = "5e20b800"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29] }
see = 1718

[[opcode]]
call = "vector_arithmetic_binary_uniform_sub_fp16_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "a", "U"]
bits = "7ec01400"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29] }
see = 1719

[[opcode]]
call = "vector_crypto_aes_mix_decode"
args = ["Rd", "Rn", "D", "size"]
bits = "4e287800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "D" = [12], "size" = [23, 22] }
see = 1720

[[opcode]]
call = "memory_atomicops_swp_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "38208000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1721

[[opcode]]
call = "integer_conditional_compare_register_decode"
args = ["nzcv", "o3", "Rn", "o2", "cond", "Rm", "S", "op", "sf"]
bits = "3a400000"
mask = "7fe00c10"
slice = { "nzcv" = [3, 0], "o3" = [4], "Rn" = [9, 5], "o2" = [10], "cond" = [15, 12], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1722

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "38202000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1723

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_long_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "size", "U", "Q"]
bits = "2f006000"
mask = "bf00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1724

[[opcode]]
call = "vector_arithmetic_binary_uniform_logical_bsleor_decode"
args = ["Rd", "Rn", "opcode", "Rm", "opc2", "U", "Q"]
bits = "2e601c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "opc2" = [23, 22], "U" = [29], "Q" = [30] }
see = 1725

[[opcode]]
call = "branch_unconditional_eret_decode"
args = ["op4", "Rn", "M", "A", "op2"]
bits = "d69f03e0"
mask = "ffffffff"
slice = { "op4" = [4, 0], "Rn" = [9, 5], "M" = [10], "A" = [11], "op2" = [20, 16] }
see = 1726

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_bulk_sisd_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U"]
bits = "5ea1a800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29] }
see = 1727

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_int_accum_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "2e209400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1728

[[opcode]]
call = "vector_shift_right_sisd_decode"
args = ["Rd", "Rn", "o0", "o1", "immb", "immh", "U"]
bits = "7f001400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "o1" = [13], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1729

[[opcode]]
call = "float_arithmetic_round_frint_decode"
args = ["Rd", "Rn", "rmode", "typ", "S", "M"]
bits = "1e27c000"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "rmode" = [17, 15], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1730

[[opcode]]
call = "vector_reduce_intmax_decode"
args = ["Rd", "Rn", "op", "size", "U", "Q"]
bits = "2e30a800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1731

[[opcode]]
call = "integer_arithmetic_mul_widening_3264_decode"
args = ["Rd", "Rn", "Ra", "o0", "Rm", "U", "op54", "sf"]
bits = "9ba08000"
mask = "ffe08000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Ra" = [14, 10], "o0" = [15], "Rm" = [20, 16], "U" = [23], "op54" = [30, 29], "sf" = [31] }
see = 1732

[[opcode]]
call = "memory_vector_single_nowb_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "R", "L", "Q"]
bits = "0d000000"
mask = "bfff2000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "R" = [21], "L" = [22], "Q" = [30] }
see = 1733

[[opcode]]
call = "float_convert_int_decode"
args = ["Rd", "Rn", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e250000"
mask = "7f3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1734

[[opcode]]
call = "vector_reduce_fpmaxnm_simd_decode"
args = ["Rd", "Rn", "opcode", "sz", "o1", "U", "Q"]
bits = "2e30c800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1735

[[opcode]]
call = "memory_single_simdfp_immediate_signed_postidx_memory_single_simdfp_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "3c400400"
mask = "3f600c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1736

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_double_simd_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "size", "U", "Q"]
bits = "0f007000"
mask = "bf00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1737

[[opcode]]
call = "vector_arithmetic_binary_disparate_mul_product_decode"
args = ["Rd", "Rn", "opcode_0_", "opcode_1_", "opcode_2_", "opcode_3_", "Rm", "size", "U", "Q"]
bits = "0e20c000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode_0_" = [12], "opcode_1_" = [13], "opcode_2_" = [14], "opcode_3_" = [15], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1738

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_bulk_sisd_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U"]
bits = "5e21a800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29] }
see = 1739

[[opcode]]
call = "vector_reduce_fp16max_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "o1", "U"]
bits = "5e30f800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "o1" = [23], "U" = [29] }
see = 1740

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp_sisd_decode"
args = ["Rd", "Rn", "ac", "Rm", "sz", "E", "U"]
bits = "7e20ec00"
mask = "ffa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "sz" = [22], "E" = [23], "U" = [29] }
see = 1741

[[opcode]]
call = "float_arithmetic_unary_decode"
args = ["Rd", "Rn", "opc", "typ", "S", "M"]
bits = "1e204000"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opc" = [16, 15], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1742

[[opcode]]
call = "memory_single_general_immediate_signed_offset_lda_stl_memory_single_general_immediate_signed_offset_lda_stl__decode"
args = ["Rt", "Rn", "imm9", "opc", "size"]
bits = "59800000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "size" = [31, 30] }
see = 1743

[[opcode]]
call = "integer_flags_setf_decode"
args = ["mask", "Rn", "opcode2", "sz", "imm6", "sf"]
bits = "3a00080d"
mask = "7fffbc1f"
slice = { "mask" = [3, 0], "Rn" = [9, 5], "opcode2" = [13, 10], "sz" = [14], "imm6" = [20, 15], "sf" = [31] }
see = 1744

[[opcode]]
call = "vector_transfer_integer_move_signed_decode"
args = ["Rd", "Rn", "imm4_0_", "imm4_1_", "imm4_3_2_", "imm5", "op", "Q"]
bits = "0e002c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm4_0_" = [11], "imm4_1_" = [12], "imm4_3_2_" = [14, 13], "imm5" = [20, 16], "op" = [29], "Q" = [30] }
see = 1745

[[opcode]]
call = "float_convert_int_decode"
args = ["Rd", "Rn", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e200000"
mask = "7f3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1746

[[opcode]]
call = "system_exceptions_debug_breakpoint_decode"
args = ["LL", "op2", "imm16", "opc"]
bits = "d4200000"
mask = "ffe0001f"
slice = { "LL" = [1, 0], "op2" = [4, 2], "imm16" = [20, 5], "opc" = [23, 21] }
see = 1747

[[opcode]]
call = "vector_shift_rightinsert_sisd_decode"
args = ["Rd", "Rn", "opcode", "immb", "immh", "U"]
bits = "7f004400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1748

[[opcode]]
call = "memory_single_general_immediate_signed_offset_normal_memory_single_general_immediate_signed_offset_normal__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "f8800000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1749

[[opcode]]
call = "float_convert_int_decode"
args = ["Rd", "Rn", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e210000"
mask = "7f3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1750

[[opcode]]
call = "vector_shift_rightnarrow_logical_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U", "Q"]
bits = "0f008400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1751

[[opcode]]
call = "integer_pac_pacda_dp_1src_decode"
args = ["Rd", "Rn", "Z", "opcode2", "S", "sf"]
bits = "dac10800"
mask = "ffffdc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Z" = [13], "opcode2" = [20, 16], "S" = [29], "sf" = [31] }
see = 1752

[[opcode]]
call = "vector_arithmetic_unary_special_recip_float_simd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U", "Q"]
bits = "0ea1d800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1753

[[opcode]]
call = "vector_arithmetic_binary_uniform_diff_decode"
args = ["Rd", "Rn", "ac", "Rm", "size", "U", "Q"]
bits = "0e207400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1754

[[opcode]]
call = "vector_reduce_add_sisd_decode"
args = ["Rd", "Rn", "opcode", "size", "U"]
bits = "5e31b800"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29] }
see = 1755

[[opcode]]
call = "memory_single_general_immediate_signed_postidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "78000400"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1756

[[opcode]]
call = "vector_arithmetic_binary_uniform_shift_simd_decode"
args = ["Rd", "Rn", "S", "R", "Rm", "size", "U", "Q"]
bits = "0e205c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "R" = [12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1757

[[opcode]]
call = "memory_exclusive_single_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "88400000"
mask = "bfe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1758

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_fp_1985_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "o1", "U", "Q"]
bits = "2ea0f400"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1759

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_int_doubling_accum_sisd_decode"
args = ["Rd", "Rn", "S", "Rm", "size", "U"]
bits = "7e008c00"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1760

[[opcode]]
call = "memory_vector_single_postinc_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "Rm", "R", "L", "Q"]
bits = "0de0c000"
mask = "bfe0f000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "Rm" = [20, 16], "R" = [21], "L" = [22], "Q" = [30] }
see = 1761

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_single_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "2e206c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1762

[[opcode]]
call = "vector_arithmetic_unary_cmp_int_bulk_simd_decode"
args = ["Rd", "Rn", "op", "size", "U", "Q"]
bits = "0e208800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1763

[[opcode]]
call = "integer_tags_mcsettagpost_decode"
args = ["Rt", "Xn", "imm9"]
bits = "19000400"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Xn" = [9, 5], "imm9" = [20, 12] }
see = 1764

[[opcode]]
call = "integer_arithmetic_rev_decode"
args = ["Rd", "Rn", "opc", "opcode2", "S", "sf"]
bits = "5ac00800"
mask = "7ffff800"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opc" = [11, 10], "opcode2" = [20, 16], "S" = [29], "sf" = [31] }
see = 1765

[[opcode]]
call = "vector_arithmetic_unary_cmp_int_bulk_simd_decode"
args = ["Rd", "Rn", "op", "size", "U", "Q"]
bits = "2e209800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1766

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "3820301f"
mask = "ffa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1767

[[opcode]]
call = "vector_arithmetic_unary_fp16_round_decode"
args = ["Rd", "Rn", "o1", "o2", "U", "Q"]
bits = "0ef99800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1768

[[opcode]]
call = "integer_bitfield_decode"
args = ["Rd", "Rn", "imms", "immr", "N", "opc", "sf"]
bits = "53000000"
mask = "7f800000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imms" = [15, 10], "immr" = [21, 16], "N" = [22], "opc" = [30, 29], "sf" = [31] }
see = 1769

[[opcode]]
call = "vector_transfer_vector_insert_decode"
args = ["Rd", "Rn", "imm4", "imm5", "op", "Q"]
bits = "6e000400"
mask = "ffe08400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm4" = [14, 11], "imm5" = [20, 16], "op" = [29], "Q" = [30] }
see = 1770

[[opcode]]
call = "branch_unconditional_register_decode"
args = ["Rm", "Rn", "M", "A", "op2", "op", "Z"]
bits = "d65f0bff"
mask = "fffffbff"
slice = { "Rm" = [4, 0], "Rn" = [9, 5], "M" = [10], "A" = [11], "op2" = [20, 16], "op" = [22, 21], "Z" = [24] }
see = 1771

[[opcode]]
call = "memory_vector_multiple_postinc_memory_vector_multiple_nowb__decode"
args = ["Rt", "Rn", "size", "opcode", "Rm", "L", "Q"]
bits = "0cc04000"
mask = "bfe0f000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "opcode" = [15, 12], "Rm" = [20, 16], "L" = [22], "Q" = [30] }
see = 1772

[[opcode]]
call = "memory_exclusive_single_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "88000000"
mask = "bfe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1773

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp16_sisd_decode"
args = ["Rd", "Rn", "ac", "Rm", "E", "U"]
bits = "7ec02400"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "E" = [23], "U" = [29] }
see = 1774

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_fp_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "U", "Q"]
bits = "2e20d400"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1775

[[opcode]]
call = "float_arithmetic_mul_addsub_decode"
args = ["Rd", "Rn", "Ra", "o0", "Rm", "o1", "typ", "S", "M"]
bits = "1f000000"
mask = "ff208000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Ra" = [14, 10], "o0" = [15], "Rm" = [20, 16], "o1" = [21], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1776

[[opcode]]
call = "memory_single_general_immediate_unsigned_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm12", "opc", "V", "size"]
bits = "79000000"
mask = "ffc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm12" = [21, 10], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1777

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp16_simd_decode"
args = ["Rd", "Rn", "ac", "Rm", "E", "U", "Q"]
bits = "2e402400"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "E" = [23], "U" = [29], "Q" = [30] }
see = 1778

[[opcode]]
call = "vector_reduce_fp16maxnm_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "o1", "U"]
bits = "5e30c800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "o1" = [23], "U" = [29] }
see = 1779

[[opcode]]
call = "integer_pac_strip_dp_1src_decode"
args = ["Rd", "Rn", "D", "opcode2", "S", "sf"]
bits = "dac143e0"
mask = "fffffbe0"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "D" = [10], "opcode2" = [20, 16], "S" = [29], "sf" = [31] }
see = 1780

[[opcode]]
call = "memory_single_simdfp_immediate_signed_preidx_memory_single_simdfp_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "3c000c00"
mask = "3f600c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1781

[[opcode]]
call = "vector_arithmetic_unary_float_conv_int_simd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U", "Q"]
bits = "0e21d800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1782

[[opcode]]
call = "vector_arithmetic_unary_float_conv_int_simd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U", "Q"]
bits = "2e21d800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1783

[[opcode]]
call = "integer_pac_pacdb_dp_1src_decode"
args = ["Rd", "Rn", "Z", "opcode2", "S", "sf"]
bits = "dac10c00"
mask = "ffffdc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Z" = [13], "opcode2" = [20, 16], "S" = [29], "sf" = [31] }
see = 1784

[[opcode]]
call = "integer_tags_mcsettagandzerodatapost_decode"
args = ["Rt", "Xn", "imm9"]
bits = "19800400"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Xn" = [9, 5], "imm9" = [20, 12] }
see = 1785

[[opcode]]
call = "memory_vector_multiple_nowb_memory_vector_multiple_nowb__decode"
args = ["Rt", "Rn", "size", "opcode", "L", "Q"]
bits = "0c008000"
mask = "bffff000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "opcode" = [15, 12], "L" = [22], "Q" = [30] }
see = 1786

[[opcode]]
call = "vector_arithmetic_binary_uniform_shift_simd_decode"
args = ["Rd", "Rn", "S", "R", "Rm", "size", "U", "Q"]
bits = "0e204c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "R" = [12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1787

[[opcode]]
call = "integer_logical_shiftedreg_decode"
args = ["Rd", "Rn", "imm6", "Rm", "N", "shift", "opc", "sf"]
bits = "4a000000"
mask = "7f200000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm6" = [15, 10], "Rm" = [20, 16], "N" = [21], "shift" = [23, 22], "opc" = [30, 29], "sf" = [31] }
see = 1788

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_bulk_simd_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U", "Q"]
bits = "0ea1b800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1789

[[opcode]]
call = "memory_ordered_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "88c08000"
mask = "bfe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1790

[[opcode]]
call = "vector_transfer_vector_table_decode"
args = ["Rd", "Rn", "op", "len", "Rm", "op2", "Q"]
bits = "0e001000"
mask = "bfe09c00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "len" = [14, 13], "Rm" = [20, 16], "op2" = [23, 22], "Q" = [30] }
see = 1791

[[opcode]]
call = "integer_arithmetic_pointer_mcsubtracttaggedaddresssetflags_decode"
args = ["Xd", "Xn", "Xm"]
bits = "bac00000"
mask = "ffe0fc00"
slice = { "Xd" = [4, 0], "Xn" = [9, 5], "Xm" = [20, 16] }
see = 1792

[[opcode]]
call = "vector_arithmetic_binary_uniform_sub_saturating_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U"]
bits = "5e202c00"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1793

[[opcode]]
call = "vector_arithmetic_binary_uniform_shift_simd_decode"
args = ["Rd", "Rn", "S", "R", "Rm", "size", "U", "Q"]
bits = "0e205400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "R" = [12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1794

[[opcode]]
call = "vector_arithmetic_unary_extract_sat_sisd_decode"
args = ["Rd", "Rn", "opcode", "size", "U"]
bits = "7e214800"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29] }
see = 1795

[[opcode]]
call = "vector_arithmetic_binary_uniform_shift_sisd_decode"
args = ["Rd", "Rn", "S", "R", "Rm", "size", "U"]
bits = "7e205400"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "R" = [12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1796

[[opcode]]
call = "vector_arithmetic_unary_clsz_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "0e204800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1797

[[opcode]]
call = "vector_arithmetic_unary_diffneg_int_sisd_decode"
args = ["Rd", "Rn", "opcode", "size", "U"]
bits = "7e20b800"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29] }
see = 1798

[[opcode]]
call = "system_hints_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d503207f"
mask = "ffffffff"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1799

[[opcode]]
call = "system_register_system_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "o0", "L"]
bits = "d5300000"
mask = "fff00000"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "o0" = [19], "L" = [21] }
see = 1800

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp_sisd_decode"
args = ["Rd", "Rn", "ac", "Rm", "sz", "E", "U"]
bits = "5e20e400"
mask = "ffa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "sz" = [22], "E" = [23], "U" = [29] }
see = 1801

[[opcode]]
call = "integer_arithmetic_rev_decode"
args = ["Rd", "Rn", "opc", "opcode2", "S", "sf"]
bits = "5ac00400"
mask = "7ffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opc" = [11, 10], "opcode2" = [20, 16], "S" = [29], "sf" = [31] }
see = 1802

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_bulk_sisd_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U"]
bits = "7e21a800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29] }
see = 1803

[[opcode]]
call = "vector_arithmetic_unary_fp16_round_decode"
args = ["Rd", "Rn", "o1", "o2", "U", "Q"]
bits = "2e799800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1804

[[opcode]]
call = "vector_arithmetic_binary_disparate_mul_double_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "0e20d000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1805

[[opcode]]
call = "vector_arithmetic_binary_uniform_shift_simd_decode"
args = ["Rd", "Rn", "S", "R", "Rm", "size", "U", "Q"]
bits = "2e204c00"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "R" = [12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1806

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_bulk_sisd_decode"
args = ["Rd", "Rn", "o1", "o2", "U"]
bits = "7ef9b800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29] }
see = 1807

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "78206000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1808

[[opcode]]
call = "memory_single_general_immediate_signed_offset_unpriv_memory_single_general_immediate_signed_offset_unpriv__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "b8400800"
mask = "bfe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1809

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_fp16_1985_decode"
args = ["Rd", "Rn", "opcode", "Rm", "o1", "U", "Q"]
bits = "2e403400"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1810

[[opcode]]
call = "float_convert_int_decode"
args = ["Rd", "Rn", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e7e0000"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1811

[[opcode]]
call = "system_exceptions_debug_exception_decode"
args = ["LL", "op2", "imm16", "opc"]
bits = "d4a00003"
mask = "ffe0001f"
slice = { "LL" = [1, 0], "op2" = [4, 2], "imm16" = [20, 5], "opc" = [23, 21] }
see = 1812

[[opcode]]
call = "vector_arithmetic_binary_uniform_rsqrtsfp16_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "a", "U"]
bits = "5ec03c00"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29] }
see = 1813

[[opcode]]
call = "integer_arithmetic_cnt_decode"
args = ["Rd", "Rn", "op", "opcode2", "S", "sf"]
bits = "5ac01000"
mask = "7ffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [10], "opcode2" = [20, 16], "S" = [29], "sf" = [31] }
see = 1814

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b8206000"
mask = "bf20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1815

[[opcode]]
call = "integer_pac_autib_hint_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d50321df"
mask = "fffffddf"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1816

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_bulk_sisd_decode"
args = ["Rd", "Rn", "o1", "o2", "U"]
bits = "7e79a800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29] }
see = 1817

[[opcode]]
call = "vector_arithmetic_binary_uniform_logical_andorr_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "0ee01c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1818

[[opcode]]
call = "memory_ordered_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "48c08000"
mask = "ffe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1819

[[opcode]]
call = "memory_vector_single_postinc_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "Rm", "R", "L", "Q"]
bits = "0dc02000"
mask = "bfe02000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "Rm" = [20, 16], "R" = [21], "L" = [22], "Q" = [30] }
see = 1820

[[opcode]]
call = "memory_single_general_immediate_signed_postidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "38400400"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1821

[[opcode]]
call = "vector_arithmetic_binary_uniform_sub_saturating_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U"]
bits = "7e202c00"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1822

[[opcode]]
call = "memory_single_general_immediate_signed_offset_normal_memory_single_general_immediate_signed_offset_normal__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "38000000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1823

[[opcode]]
call = "vector_arithmetic_binary_element_mul_fp16_simd_decode"
args = ["Rd", "Rn", "H", "opcode", "Rm", "M", "L", "size", "U", "Q"]
bits = "0f009000"
mask = "bfc0f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "opcode" = [15, 12], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1824

[[opcode]]
call = "float_arithmetic_round_frint_32_64_decode"
args = ["Rd", "Rn", "op", "typ"]
bits = "1e284000"
mask = "ff3e7c00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [16, 15], "typ" = [23, 22] }
see = 1825

[[opcode]]
call = "memory_single_general_immediate_signed_postidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "b8400400"
mask = "bfe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1826

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_int_doubling_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "0e20b400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1827

[[opcode]]
call = "memory_atomicops_cas_single_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "88a07c00"
mask = "bfa07c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1828

[[opcode]]
call = "memory_single_general_immediate_signed_preidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "78800c00"
mask = "ffa00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1829

[[opcode]]
call = "memory_ordered_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "88c00000"
mask = "bfe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1830

[[opcode]]
call = "integer_arithmetic_addsub_shiftedreg_decode"
args = ["Rd", "Rn", "imm6", "Rm", "shift", "S", "op", "sf"]
bits = "2b000000"
mask = "7f200000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm6" = [15, 10], "Rm" = [20, 16], "shift" = [23, 22], "S" = [29], "op" = [30], "sf" = [31] }
see = 1831

[[opcode]]
call = "integer_shift_variable_decode"
args = ["Rd", "Rn", "op2", "opcode2_5_2_", "Rm", "S", "op", "sf"]
bits = "1ac02800"
mask = "7fe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op2" = [11, 10], "opcode2_5_2_" = [15, 12], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1832

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_int_sisd_decode"
args = ["Rd", "Rn", "eq", "Rm", "size", "U"]
bits = "7e203c00"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "eq" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1833

[[opcode]]
call = "float_convert_fix_decode"
args = ["Rd", "Rn", "scale", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e030000"
mask = "7f3f0000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "scale" = [15, 10], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1834

[[opcode]]
call = "system_barriers_decode"
args = ["Rt", "opc", "CRm", "CRn", "op1", "op0", "L"]
bits = "d50330ff"
mask = "fffff0ff"
slice = { "Rt" = [4, 0], "opc" = [6, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1835

[[opcode]]
call = "vector_reduce_fpmaxnm_simd_decode"
args = ["Rd", "Rn", "opcode", "sz", "o1", "U", "Q"]
bits = "2eb0c800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1836

[[opcode]]
call = "memory_exclusive_single_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "48400000"
mask = "ffe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1837

[[opcode]]
call = "vector_arithmetic_binary_element_mul_high_sisd_decode"
args = ["Rd", "Rn", "H", "op", "Rm", "M", "L", "size", "U"]
bits = "5f00c000"
mask = "ff00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "op" = [12], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29] }
see = 1838

[[opcode]]
call = "memory_single_general_register_memory_single_general_register__decode"
args = ["Rt", "Rn", "S", "option_name", "Rm", "opc", "V", "size"]
bits = "78600800"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "S" = [12], "option_name" = [15, 13], "Rm" = [20, 16], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1839

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "38204000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1840

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp_simd_decode"
args = ["Rd", "Rn", "ac", "Rm", "sz", "E", "U", "Q"]
bits = "2ea0ec00"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "sz" = [22], "E" = [23], "U" = [29], "Q" = [30] }
see = 1841

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_bulk_simd_decode"
args = ["Rd", "Rn", "o1", "o2", "U", "Q"]
bits = "0ef9b800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1842

[[opcode]]
call = "vector_transfer_vector_cpydup_sisd_decode"
args = ["Rd", "Rn", "imm4", "imm5", "op"]
bits = "5e000400"
mask = "ffe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm4" = [14, 11], "imm5" = [20, 16], "op" = [29] }
see = 1843

[[opcode]]
call = "memory_ordered_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "48800000"
mask = "ffe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1844

[[opcode]]
call = "integer_logical_shiftedreg_decode"
args = ["Rd", "Rn", "imm6", "Rm", "N", "shift", "opc", "sf"]
bits = "0a000000"
mask = "7f200000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm6" = [15, 10], "Rm" = [20, 16], "N" = [21], "shift" = [23, 22], "opc" = [30, 29], "sf" = [31] }
see = 1845

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_int_doubling_accum_sisd_decode"
args = ["Rd", "Rn", "S", "Rm", "size", "U"]
bits = "7e008400"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1846

[[opcode]]
call = "vector_arithmetic_binary_disparate_mul_accum_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "2e20a000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1847

[[opcode]]
call = "vector_crypto_sha2op_sha1sched1_decode"
args = ["Rd", "Rn", "opcode", "size"]
bits = "5e281800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22] }
see = 1848

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_bulk_simd_decode"
args = ["Rd", "Rn", "o1", "o2", "U", "Q"]
bits = "0e79a800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1849

[[opcode]]
call = "float_arithmetic_round_frint_decode"
args = ["Rd", "Rn", "rmode", "typ", "S", "M"]
bits = "1e254000"
mask = "ff3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "rmode" = [17, 15], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1850

[[opcode]]
call = "integer_tags_mcsettagpairandzerodatapre_decode"
args = ["Rt", "Xn", "imm9"]
bits = "19a00c00"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Xn" = [9, 5], "imm9" = [20, 12] }
see = 1851

[[opcode]]
call = "vector_reduce_fp16max_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "o1", "U"]
bits = "5eb0f800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "o1" = [23], "U" = [29] }
see = 1852

[[opcode]]
call = "vector_arithmetic_binary_uniform_logical_andorr_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "0ea01c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1853

[[opcode]]
call = "memory_single_general_immediate_signed_offset_normal_memory_single_general_immediate_signed_offset_normal__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "78800000"
mask = "ffa00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1854

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "7820301f"
mask = "ffa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1855

[[opcode]]
call = "memory_vector_multiple_postinc_memory_vector_multiple_nowb__decode"
args = ["Rt", "Rn", "size", "opcode", "Rm", "L", "Q"]
bits = "0c808000"
mask = "bfe0f000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "opcode" = [15, 12], "Rm" = [20, 16], "L" = [22], "Q" = [30] }
see = 1856

[[opcode]]
call = "vector_arithmetic_unary_cmp_float_bulk_sisd_decode"
args = ["Rd", "Rn", "op", "sz", "U"]
bits = "7ea0c800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "sz" = [22], "U" = [29] }
see = 1857

[[opcode]]
call = "integer_logical_shiftedreg_decode"
args = ["Rd", "Rn", "imm6", "Rm", "N", "shift", "opc", "sf"]
bits = "2a000000"
mask = "7f200000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm6" = [15, 10], "Rm" = [20, 16], "N" = [21], "shift" = [23, 22], "opc" = [30, 29], "sf" = [31] }
see = 1858

[[opcode]]
call = "vector_arithmetic_binary_uniform_sub_fp_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "U"]
bits = "7ea0d400"
mask = "ffa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "U" = [29] }
see = 1859

[[opcode]]
call = "memory_single_general_immediate_unsigned_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm12", "opc", "V", "size"]
bits = "39800000"
mask = "ff800000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm12" = [21, 10], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1860

[[opcode]]
call = "vector_shift_right_simd_decode"
args = ["Rd", "Rn", "o0", "o1", "immb", "immh", "U", "Q"]
bits = "0f000400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "o1" = [13], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1861

[[opcode]]
call = "integer_arithmetic_addsub_extendedreg_decode"
args = ["Rd", "Rn", "imm3", "option_name", "Rm", "opt", "S", "op", "sf"]
bits = "6b200000"
mask = "7fe00000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm3" = [12, 10], "option_name" = [15, 13], "Rm" = [20, 16], "opt" = [23, 22], "S" = [29], "op" = [30], "sf" = [31] }
see = 1862

[[opcode]]
call = "vector_arithmetic_binary_disparate_mul_dmacc_simd_decode"
args = ["Rd", "Rn", "o1", "Rm", "size", "U", "Q"]
bits = "0e20b000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [13], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1863

[[opcode]]
call = "memory_vector_single_postinc_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "Rm", "R", "L", "Q"]
bits = "0dc00000"
mask = "bfe02000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "Rm" = [20, 16], "R" = [21], "L" = [22], "Q" = [30] }
see = 1864

[[opcode]]
call = "vector_arithmetic_binary_disparate_mul_product_decode"
args = ["Rd", "Rn", "opcode_0_", "opcode_1_", "opcode_2_", "opcode_3_", "Rm", "size", "U", "Q"]
bits = "2e20c000"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode_0_" = [12], "opcode_1_" = [13], "opcode_2_" = [14], "opcode_3_" = [15], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1865

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_halving_rounding_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "2e201400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1866

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_fp_2008_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "o1", "U", "Q"]
bits = "0ea0c400"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "o1" = [23], "U" = [29], "Q" = [30] }
see = 1867

[[opcode]]
call = "vector_arithmetic_unary_rev_decode"
args = ["Rd", "Rn", "o0", "size", "U", "Q"]
bits = "0e200800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1868

[[opcode]]
call = "vector_shift_right_simd_decode"
args = ["Rd", "Rn", "o0", "o1", "immb", "immh", "U", "Q"]
bits = "2f003400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "o1" = [13], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1869

[[opcode]]
call = "vector_shift_leftsat_sisd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U"]
bits = "7f007400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1870

[[opcode]]
call = "memory_literal_general_decode"
args = ["Rt", "imm19", "V", "opc"]
bits = "d8000000"
mask = "ff000000"
slice = { "Rt" = [4, 0], "imm19" = [23, 5], "V" = [26], "opc" = [31, 30] }
see = 1871

[[opcode]]
call = "vector_reduce_fpmaxnm_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "o1", "U"]
bits = "7eb0c800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "o1" = [23], "U" = [29] }
see = 1872

[[opcode]]
call = "vector_arithmetic_binary_uniform_mul_fp_extended_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "U"]
bits = "5e20dc00"
mask = "ffa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "U" = [29] }
see = 1873

[[opcode]]
call = "branch_conditional_compare_decode"
args = ["Rt", "imm19", "op", "sf"]
bits = "35000000"
mask = "7f000000"
slice = { "Rt" = [4, 0], "imm19" = [23, 5], "op" = [24], "sf" = [31] }
see = 1874

[[opcode]]
call = "vector_arithmetic_unary_float_round_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U", "Q"]
bits = "2e218800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1875

[[opcode]]
call = "memory_pair_simdfp_preidx_memory_pair_simdfp_postidx__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "2dc00000"
mask = "3fc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1876

[[opcode]]
call = "memory_single_general_immediate_signed_offset_lda_stl_memory_single_general_immediate_signed_offset_lda_stl__decode"
args = ["Rt", "Rn", "imm9", "opc", "size"]
bits = "19400000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "size" = [31, 30] }
see = 1877

[[opcode]]
call = "integer_pac_strip_hint_decode"
args = ["Rt", "op2", "CRm", "CRn", "op1", "op0", "L"]
bits = "d50320ff"
mask = "ffffffff"
slice = { "Rt" = [4, 0], "op2" = [7, 5], "CRm" = [11, 8], "CRn" = [15, 12], "op1" = [18, 16], "op0" = [20, 19], "L" = [21] }
see = 1878

[[opcode]]
call = "memory_single_general_register_memory_single_general_register__decode"
args = ["Rt", "Rn", "S", "option_name", "Rm", "opc", "V", "size"]
bits = "b8200800"
mask = "bfe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "S" = [12], "option_name" = [15, 13], "Rm" = [20, 16], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1879

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_fp16_2008_decode"
args = ["Rd", "Rn", "Op3", "Rm", "a", "U", "Q"]
bits = "2ec00400"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Op3" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29], "Q" = [30] }
see = 1880

[[opcode]]
call = "vector_arithmetic_unary_shift_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "2e213800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1881

[[opcode]]
call = "vector_arithmetic_unary_float_round_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U", "Q"]
bits = "0ea19800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1882

[[opcode]]
call = "vector_arithmetic_binary_uniform_cmp_fp16_simd_decode"
args = ["Rd", "Rn", "ac", "Rm", "E", "U", "Q"]
bits = "2e402c00"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "ac" = [11], "Rm" = [20, 16], "E" = [23], "U" = [29], "Q" = [30] }
see = 1883

[[opcode]]
call = "vector_shift_right_sisd_decode"
args = ["Rd", "Rn", "o0", "o1", "immb", "immh", "U"]
bits = "7f002400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "o1" = [13], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1884

[[opcode]]
call = "vector_transfer_vector_extract_decode"
args = ["Rd", "Rn", "imm4", "Rm", "op2", "Q"]
bits = "2e000000"
mask = "bfe08400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm4" = [14, 11], "Rm" = [20, 16], "op2" = [23, 22], "Q" = [30] }
see = 1885

[[opcode]]
call = "vector_arithmetic_binary_element_mul_long_decode"
args = ["Rd", "Rn", "H", "opcode", "Rm", "M", "L", "size", "U", "Q"]
bits = "0f00a000"
mask = "bf00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "opcode" = [15, 12], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1886

[[opcode]]
call = "vector_arithmetic_binary_uniform_maxmin_fp16_2008_decode"
args = ["Rd", "Rn", "Op3", "Rm", "a", "U", "Q"]
bits = "0e400400"
mask = "bfe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Op3" = [13, 11], "Rm" = [20, 16], "a" = [23], "U" = [29], "Q" = [30] }
see = 1887

[[opcode]]
call = "memory_exclusive_single_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "48408000"
mask = "ffe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1888

[[opcode]]
call = "system_exceptions_runtime_smc_decode"
args = ["LL", "op2", "imm16", "opc"]
bits = "d4000003"
mask = "ffe0001f"
slice = { "LL" = [1, 0], "op2" = [4, 2], "imm16" = [20, 5], "opc" = [23, 21] }
see = 1889

[[opcode]]
call = "memory_single_general_immediate_signed_offset_unpriv_memory_single_general_immediate_signed_offset_unpriv__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "38800800"
mask = "ffa00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1890

[[opcode]]
call = "vector_arithmetic_unary_cmp_fp16_lessthan_sisd_decode"
args = ["Rd", "Rn", "opcode", "a", "U"]
bits = "5ef8e800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "a" = [23], "U" = [29] }
see = 1891

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "78202000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1892

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "38200000"
mask = "ff20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1893

[[opcode]]
call = "memory_single_general_register_memory_single_general_register__decode"
args = ["Rt", "Rn", "S", "option_name", "Rm", "opc", "V", "size"]
bits = "f8a00800"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "S" = [12], "option_name" = [15, 13], "Rm" = [20, 16], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1894

[[opcode]]
call = "memory_vector_single_nowb_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "R", "L", "Q"]
bits = "0d602000"
mask = "bfff2000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "R" = [21], "L" = [22], "Q" = [30] }
see = 1895

[[opcode]]
call = "memory_vector_multiple_nowb_memory_vector_multiple_nowb__decode"
args = ["Rt", "Rn", "size", "opcode", "L", "Q"]
bits = "0c402000"
mask = "bfff2000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "opcode" = [15, 12], "L" = [22], "Q" = [30] }
see = 1896

[[opcode]]
call = "vector_arithmetic_unary_cmp_float_bulk_sisd_decode"
args = ["Rd", "Rn", "op", "sz", "U"]
bits = "5ea0d800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "sz" = [22], "U" = [29] }
see = 1897

[[opcode]]
call = "memory_single_general_immediate_signed_postidx_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm9", "opc", "V", "size"]
bits = "b8000400"
mask = "bfe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1898

[[opcode]]
call = "vector_logical_decode"
args = ["Rd", "h", "g", "f", "e", "d", "o2", "cmode", "c", "b", "a", "op", "Q"]
bits = "2f001400"
mask = "bff81c00"
slice = { "Rd" = [4, 0], "h" = [5], "g" = [6], "f" = [7], "e" = [8], "d" = [9], "o2" = [11], "cmode" = [15, 12], "c" = [16], "b" = [17], "a" = [18], "op" = [29], "Q" = [30] }
see = 1899

[[opcode]]
call = "vector_arithmetic_binary_element_mul_double_sisd_decode"
args = ["Rd", "Rn", "H", "opcode", "Rm", "M", "L", "size", "U"]
bits = "5f00b000"
mask = "ff00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "opcode" = [15, 12], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29] }
see = 1900

[[opcode]]
call = "memory_ordered_decode"
args = ["Rt", "Rn", "Rt2", "o0", "Rs", "o1", "L", "o2", "size"]
bits = "48808000"
mask = "ffe08000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "o0" = [15], "Rs" = [20, 16], "o1" = [21], "L" = [22], "o2" = [23], "size" = [31, 30] }
see = 1901

[[opcode]]
call = "integer_logical_shiftedreg_decode"
args = ["Rd", "Rn", "imm6", "Rm", "N", "shift", "opc", "sf"]
bits = "4a200000"
mask = "7f200000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "imm6" = [15, 10], "Rm" = [20, 16], "N" = [21], "shift" = [23, 22], "opc" = [30, 29], "sf" = [31] }
see = 1902

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_halving_truncating_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U", "Q"]
bits = "0e200400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1903

[[opcode]]
call = "memory_single_general_immediate_unsigned_memory_single_general_immediate_unsigned__decode"
args = ["Rt", "Rn", "imm12", "opc", "V", "size"]
bits = "f9800000"
mask = "ffc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm12" = [21, 10], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1904

[[opcode]]
call = "vector_arithmetic_unary_special_sqrtest_float_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U"]
bits = "7ea1d800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29] }
see = 1905

[[opcode]]
call = "vector_arithmetic_binary_uniform_add_wrapping_single_sisd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "size", "U"]
bits = "7e208400"
mask = "ff20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "size" = [23, 22], "U" = [29] }
see = 1906

[[opcode]]
call = "vector_shift_right_sisd_decode"
args = ["Rd", "Rn", "o0", "o1", "immb", "immh", "U"]
bits = "5f003400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o0" = [12], "o1" = [13], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1907

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_bulk_simd_decode"
args = ["Rd", "Rn", "o1", "sz", "o2", "U", "Q"]
bits = "2ea1b800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "sz" = [22], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1908

[[opcode]]
call = "memory_single_simdfp_immediate_unsigned_memory_single_simdfp_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm12", "opc", "V", "size"]
bits = "3d400000"
mask = "3f400000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm12" = [21, 10], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1909

[[opcode]]
call = "memory_pair_simdfp_noalloc_memory_pair_simdfp_noalloc__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "2c000000"
mask = "3fc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1910

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_fp16_simd_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "size", "U", "Q"]
bits = "0f005000"
mask = "bfc0f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1911

[[opcode]]
call = "memory_pair_general_offset_memory_pair_general_postidx__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "29400000"
mask = "7fc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1912

[[opcode]]
call = "integer_arithmetic_div_decode"
args = ["Rd", "Rn", "o1", "opcode2_5_1_", "Rm", "S", "op", "sf"]
bits = "1ac00800"
mask = "7fe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [10], "opcode2_5_1_" = [15, 11], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1913

[[opcode]]
call = "vector_arithmetic_binary_uniform_shift_simd_decode"
args = ["Rd", "Rn", "S", "R", "Rm", "size", "U", "Q"]
bits = "2e204400"
mask = "bf20fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "S" = [11], "R" = [12], "Rm" = [20, 16], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1914

[[opcode]]
call = "integer_tags_mcsettagpre_decode"
args = ["Rt", "Xn", "imm9"]
bits = "19000c00"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Xn" = [9, 5], "imm9" = [20, 12] }
see = 1915

[[opcode]]
call = "vector_arithmetic_unary_cnt_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "0e205800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1916

[[opcode]]
call = "vector_shift_leftsat_sisd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U"]
bits = "5f007400"
mask = "ff80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [12], "immb" = [18, 16], "immh" = [22, 19], "U" = [29] }
see = 1917

[[opcode]]
call = "vector_arithmetic_binary_element_mulacc_fp_sisd_decode"
args = ["Rd", "Rn", "H", "o2", "Rm", "M", "L", "sz", "U"]
bits = "5f801000"
mask = "ff80f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "o2" = [14], "Rm" = [19, 16], "M" = [20], "L" = [21], "sz" = [22], "U" = [29] }
see = 1918

[[opcode]]
call = "memory_single_general_register_memory_single_general_register__decode"
args = ["Rt", "Rn", "S", "option_name", "Rm", "opc", "V", "size"]
bits = "78a00800"
mask = "ffa00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "S" = [12], "option_name" = [15, 13], "Rm" = [20, 16], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1919

[[opcode]]
call = "integer_arithmetic_mul_widening_64128hi_decode"
args = ["Rd", "Rn", "Ra", "o0", "Rm", "U", "op54", "sf"]
bits = "9b400000"
mask = "ffe08000"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Ra" = [14, 10], "o0" = [15], "Rm" = [20, 16], "U" = [23], "op54" = [30, 29], "sf" = [31] }
see = 1920

[[opcode]]
call = "vector_arithmetic_unary_diffneg_float_decode"
args = ["Rd", "Rn", "opcode", "sz", "U", "Q"]
bits = "0ea0f800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1921

[[opcode]]
call = "memory_single_general_immediate_signed_offset_lda_stl_memory_single_general_immediate_signed_offset_lda_stl__decode"
args = ["Rt", "Rn", "imm9", "opc", "size"]
bits = "19c00000"
mask = "ffe00c00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm9" = [20, 12], "opc" = [23, 22], "size" = [31, 30] }
see = 1922

[[opcode]]
call = "vector_shift_conv_float_simd_decode"
args = ["Rd", "Rn", "opcode", "immb", "immh", "U", "Q"]
bits = "0f00fc00"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1923

[[opcode]]
call = "memory_atomicops_st_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b820001f"
mask = "bfa0fc1f"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1924

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_bulk_simd_decode"
args = ["Rd", "Rn", "o1", "o2", "U", "Q"]
bits = "0ef9a800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29], "Q" = [30] }
see = 1925

[[opcode]]
call = "memory_vector_single_postinc_memory_vector_single_nowb__decode"
args = ["Rt", "Rn", "size", "S", "opcode", "Rm", "R", "L", "Q"]
bits = "0de00000"
mask = "bfe02000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "size" = [11, 10], "S" = [12], "opcode" = [15, 13], "Rm" = [20, 16], "R" = [21], "L" = [22], "Q" = [30] }
see = 1926

[[opcode]]
call = "vector_arithmetic_unary_cmp_float_lessthan_simd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U", "Q"]
bits = "0ea0e800"
mask = "bfbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1927

[[opcode]]
call = "memory_pair_general_postidx_memory_pair_general_postidx__decode"
args = ["Rt", "Rn", "Rt2", "imm7", "L", "V", "opc"]
bits = "68c00000"
mask = "ffc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "Rt2" = [14, 10], "imm7" = [21, 15], "L" = [22], "V" = [26], "opc" = [31, 30] }
see = 1928

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_int_simd_decode"
args = ["Rd", "Rn", "opcode", "a", "U", "Q"]
bits = "2e79d800"
mask = "bffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "a" = [23], "U" = [29], "Q" = [30] }
see = 1929

[[opcode]]
call = "vector_arithmetic_binary_uniform_rsqrts_simd_decode"
args = ["Rd", "Rn", "opcode", "Rm", "sz", "U", "Q"]
bits = "0ea0fc00"
mask = "bfa0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [15, 11], "Rm" = [20, 16], "sz" = [22], "U" = [29], "Q" = [30] }
see = 1930

[[opcode]]
call = "memory_single_general_immediate_unsigned_memory_single_general_immediate_signed_postidx__decode"
args = ["Rt", "Rn", "imm12", "opc", "V", "size"]
bits = "b9800000"
mask = "ffc00000"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "imm12" = [21, 10], "opc" = [23, 22], "V" = [26], "size" = [31, 30] }
see = 1931

[[opcode]]
call = "vector_shift_rightnarrow_uniform_simd_decode"
args = ["Rd", "Rn", "op", "immb", "immh", "U", "Q"]
bits = "2f009400"
mask = "bf80fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op" = [11], "immb" = [18, 16], "immh" = [22, 19], "U" = [29], "Q" = [30] }
see = 1932

[[opcode]]
call = "vector_arithmetic_unary_fp16_conv_float_bulk_sisd_decode"
args = ["Rd", "Rn", "o1", "o2", "U"]
bits = "5e79b800"
mask = "fffffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "o1" = [12], "o2" = [23], "U" = [29] }
see = 1933

[[opcode]]
call = "vector_arithmetic_unary_float_conv_float_tieaway_sisd_decode"
args = ["Rd", "Rn", "opcode", "sz", "U"]
bits = "5e21c800"
mask = "ffbffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "sz" = [22], "U" = [29] }
see = 1934

[[opcode]]
call = "vector_reduce_addlong_decode"
args = ["Rd", "Rn", "opcode", "size", "U", "Q"]
bits = "0e303800"
mask = "bf3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [16, 12], "size" = [23, 22], "U" = [29], "Q" = [30] }
see = 1935

[[opcode]]
call = "integer_tags_mcsettaganddatapairpost_decode"
args = ["Xt", "Xn", "Xt2", "simm7"]
bits = "68800000"
mask = "ffc00000"
slice = { "Xt" = [4, 0], "Xn" = [9, 5], "Xt2" = [14, 10], "simm7" = [21, 15] }
see = 1936

[[opcode]]
call = "float_move_fp_select_decode"
args = ["Rd", "Rn", "cond", "Rm", "typ", "S", "M"]
bits = "1e200c00"
mask = "ff200c00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "cond" = [15, 12], "Rm" = [20, 16], "typ" = [23, 22], "S" = [29], "M" = [31] }
see = 1937

[[opcode]]
call = "integer_shift_variable_decode"
args = ["Rd", "Rn", "op2", "opcode2_5_2_", "Rm", "S", "op", "sf"]
bits = "1ac02400"
mask = "7fe0fc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "op2" = [11, 10], "opcode2_5_2_" = [15, 12], "Rm" = [20, 16], "S" = [29], "op" = [30], "sf" = [31] }
see = 1938

[[opcode]]
call = "vector_arithmetic_binary_element_mul_high_sisd_decode"
args = ["Rd", "Rn", "H", "op", "Rm", "M", "L", "size", "U"]
bits = "5f00d000"
mask = "ff00f400"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "H" = [11], "op" = [12], "Rm" = [19, 16], "M" = [20], "L" = [21], "size" = [23, 22], "U" = [29] }
see = 1939

[[opcode]]
call = "float_convert_int_decode"
args = ["Rd", "Rn", "opcode", "rmode", "typ", "S", "sf"]
bits = "1e240000"
mask = "7f3ffc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "opcode" = [18, 16], "rmode" = [20, 19], "typ" = [23, 22], "S" = [29], "sf" = [31] }
see = 1940

[[opcode]]
call = "integer_pac_autia_dp_1src_decode"
args = ["Rd", "Rn", "Z", "opcode2", "S", "sf"]
bits = "dac11000"
mask = "ffffdc00"
slice = { "Rd" = [4, 0], "Rn" = [9, 5], "Z" = [13], "opcode2" = [20, 16], "S" = [29], "sf" = [31] }
see = 1941

[[opcode]]
call = "memory_atomicops_ld_decode"
args = ["Rt", "Rn", "opc", "o3", "Rs", "R", "A", "V", "size"]
bits = "b8202000"
mask = "bf20fc00"
slice = { "Rt" = [4, 0], "Rn" = [9, 5], "opc" = [14, 12], "o3" = [15], "Rs" = [20, 16], "R" = [22], "A" = [23], "V" = [26], "size" = [31, 30] }
see = 1942

